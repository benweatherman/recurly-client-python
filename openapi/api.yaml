---
openapi: 3.0.0
info:
  title: Recurly Partner API
  description: |
    # Getting Started

    ## Versioning
    The Partner API is versioned to allow stability for integrators and
    flexibility for Recurly to continue making improvements.

    The versions follow a format that incorporates the approximate date the
    changes were released in a YYYY-MM-DD format, e.g. `v2017-01-12`.

    Each request should specify a version using the `Accept` header:
    * `Accept: application/vnd.recurly.v2017-01-12`
    * `Accept: application/vnd.recurly.v2017-01-12+json`

    All responses will include a `Recurly-Version` header with the API version
    used to process the request:
    ```
    Recurly-Version: recurly.v2017-01-12
    ```

    ### Default Versions
    By default any non-versioned request will default to the newest version of
    the API. Users of the API are strongly encouraged to specify the requested
    version to avoid unexpected changes when new versions are added.

    The following media types would will also default the newest version of
    the API:
    * `application/json`
    * `application/vnd.recurly`
    * `application/vnd.recurly+json`

    ### Deprecation
    Responses for a deprecated version request will return two headers:
    ```
    Recurly-Deprecated: TRUE
    Recurly-Sunset-Date: 2017-06-01T00:00:00+00:00
    ```
    The sunset date is an ISO-8601 formatted date time after which the version
    will no longer be accessible.

    ### Unsupported Versions
    A request for an unsupported version will return a status code of 406 and
    the body will include a list of supported versions:
    ```
    {
      "error": {
        "type": "invalid_api_version",
        "message": "That accept header isn't in the format we use to specify an API version. Try one of these instead:",
        "acceptable_accept_headers": [
          "application/vnd.recurly.v2016-03-01",
          "application/vnd.recurly.v2016-04-27",
          "application/vnd.recurly.v2016-07-27",
          "application/vnd.recurly.v2016-12-15",
          "application/vnd.recurly.v2017-01-12"
        ]
      }
    }
    ```

    ## Error Messages
    Error messages sent via the Recurly Partner API are generally directed at
    developers and those who are familiar with API technology. When using the
    Partner API and passing error messages to target systems, be mindful that
    these messages may not make sense in the context of the target system.
    Please consider changing these messages in target system to be better
    suited to the audience of the system.

    ## Pagination
    ### Response Schema
    Every GET listing endpoint returns a response with the same schema:

    ```
    {
      "object":   "list",         // Always "list"
      "has_more": true,           // false if this is the last page of data
      "next":     "https://...",  // A URL pointing to the next page of data
      "data":     []              // The data for this page as an array
    }
    ```

    To page through every record, your code should continually call the URL
    at `next` until `has_more` is `false`.

    ### Query Parameters
    Most GET listing endpoints take query parameters that allow filtering
    and sorting the results. Some endpoints have additional parameters, which are
    documented on the respective endpoints, but most support the
    following parameters:

    * `ids`: A comma separated list of ids to match.
    * `limit`: The number of records to return per page.
    * `order`: The sort order of records.
    * `sort`: The date field to use in sorting.
    * `begin_time`: The start datetime to filter (ISO 8601).
    * `end_time`: The end datetime to filter (ISO 8601).

    ### Counting with HEAD
    Every GET listing endpoint also supports the HEAD HTTP method. Making a
    head request to the endpoint results in an empty body and an additional
    `Recurly-Total-Records` header. This is a count of the total number of records
    that the endpoint will return, taking into account the current filtering query
    parameters.

    ## Limits
    In order to provide a fast response time to all our customers, we may rate
    limit excessive requests. By default, new Recurly sites have the following
    API rate limits:

    * Sandbox sites: 400 requests/min. All requests count towards the rate limit.
    * Production sites: 1,000 requests/min. Only GET requests count towards the rate limit.

    Once your site moves into production mode, Recurly will only rate limit
    GET requests. New subscriptions, account modifications, and other requests
    using POST, PUT, or DELETE methods will not count against your rate limit.

    The rate limit is calculated over a sliding 5 minute window. This means a
    production site could make 4,000 requests within one minute and not hit
    the rate limit so long as the site made less than 1,000 requests during
    the prior 4 minutes.

    If an API request exceeds the rate limit, the API will return a
    `429 Too Many Requests` HTTP status. If your business needs a higher
    limit, please contact support.

    The rate limit applied to your client can be determined with the
    `X-RateLimit-Limit` header, and the number of remaining requests is sent
    in the `X-RateLimit-Remaining` header. Finally, the `X-RateLimit-Reset`
    header contains an integer value representing the time, measured in
    seconds since the UNIX Epoch, at which the request count will be reset.

    ## Change Log

    ### v2017-01-12
    * Added new `ids` pagination parameter.
    * Changed Site response format:
      * Added `settings`.
    * Changed Account response format:
      * Billing info is no longer wrapped in an array.
    * Changed allowed parameters on `POST /sites/{site_id}/accounts`:
      * Added `shipping_addresses`.
    * Changed allowed parameters on `POST /sites/{site_id}/subscriptions`:
      * Added `shipping_address`.
      * Added `shipping_address_id`.
    * Changed allowed parameters on `PUT /sites/{site_id}/subscriptions/{subscription_id}`:
      * Added `shipping_address`.
      * Added `shipping_address_id`.
    * Changed Coupon request format:
      * Removed `description`, use `hosted_description` instead.
    * Changed Subscription response format:
      * Added `expiration_reason`.

    ### v2016-12-15
    * Changed pagination parameters:
      * Added `begin_time`.
      * Added `end_time`.
      * Removed `date`.
      * Removed `seen_id` parameter.
      * Removed `id` value for the `sort` parameter; use `created_at` instead.
      * Changed default value of the `sort` parameter to `created_at`.
    * Changed parameters on `POST /sites/{site_id}/subscriptions`:
      * Added `total_billing_cycles`.
      * Removed `billing_cycles`.
    * Changed parameters on `PUT /sites/{site_id}/subscriptions/{subscription_id}`:
      * Added `remaining_billing_cycles`.
      * Removed `billing_cycles`.
    * Changed parameters on `PUT /sites/{site_id}/accounts/{account_id}/billing_info`:
      * Added `currency`.
    * Changed Unique Coupon Code response format:
      * Added `updated_at`.
    * Changed Shipping Address response format:
      * Added `created_at`.
      * Added `updated_at`.
    * Changed Account response format:
      * Added `shipping_addresses`.
    * Changed Subscription response format:
      * Added `shipping_address`.
    * Changed Line Item response format:
      * Added `credit_applied`.
      * Added `original_line_item_invoice_id`.
      * Added `subtotal`.
    * Changed Subscription response format:
      * Added `remaining_billing_cycles`.

    ### v2016-07-27
    * Changed Line Item response format:
      * Added `uuid`.
    * Changed Coupon response format:
      * Added `unique_code_template`.
      * Removed `currencies` list.
      * Changed format of `discount` object.
    * Added `PUT /sites/{site_id}/coupons/{coupon_id}` to update a coupon.
    * Permitted additional parameters on `POST /sites/{site_id}/coupons`:
      * Added `applies_to_non_plan_charges`.
      * Added `redemption_resource`.
      * Added `coupon_type`.
      * Added `unique_code_template`.
    * Changed allowed parameters on `POST /sites/{site_id}/coupons`:
      * Added `free_trial_unit`.
      * Added `free_trial_amount`.
    * Added `POST /sites/:site_id/coupons/:id/generate`.
    * Added `GET /site/:site_id/coupon/:coupon_id/unique_coupon_codes`.
    * Added `GET /site/:site_id/unique_coupon_codes/:unique_coupon_code_id`.
    * Added `DELETE /site/:site_id/unique_coupon_codes/:unique_coupon_code_id`.
    * Added `PUT /site/:site_id/unique_coupon_codes/:unique_coupon_code_id/restore`.
    * Changed Subscription response format:
      * Added `subtotal`.
      * Added `terms_and_conditions`.
      * Added `customer_notes`.
      * Added `bank_account_authorized_at`.
      * Removed `total`, `tax` and `tax_info`. Use the pre-tax `subtotal` instead.
    * Added `GET /sites/:site_id/accounts/:account_id/acquisition`.
    * Added `PUT /sites/:site_id/accounts/:account_id/acquisition`.
    * Added `DELETE /sites/:site_id/accounts/:account_id/acquisition`.
    * Added `GET /sites/:site_id/acquisitions`.
    * Changed Transaction response format:
      * Added `original_transaction_id`.
    * Added `GET /sites/:site_id/accounts/:account_id/shipping_addresses`.
    * Added `POST /sites/:site_id/accounts/:account_id/shipping_addresses`.
    * Added `PUT /sites/:site_id/accounts/:account_id/shipping_addresses/:shipping_address_id`.
    * Added `DELETE /sites/:site_id/accounts/:account_id/shipping_addresses/:shipping_address_id`.

    ### v2016-07-05 (Removed)
    * Changed Subscription response format:
      * Added `coupon_redemptions` list.
    * Changed Coupon Redemption response format:
      * Removed `expired_at`. Use `removed_at` instead.

    ### v2016-04-27
    * Changed Invoice, Transaction, Subscription response formats:
      * Added `account` object.
      * Removed `account_id`. Use `account.id` instead.
    * Changed Line Item response format:
      * Added `account` object.
      * Removed `account_id` and `account_code`. Use `account.id` and `account.code` instead.

    ### v2016-03-01
    * Added `PUT /sites/{site_id}/subscriptions/{subscription_id}/cancel` to cancel a subscription.
    * Added `PUT /sites/{site_id}/subscriptions/{subscription_id}/reactivate` to reactivate a canceled subscription.
    * Changed `PUT /sites/{site_id}/subscriptions/{subscription_id}` to no longer allow `state` parameter changes. Use the new `cancel` or `reactivate` methods instead.
    * Changed `DELETE /sites/{site_id}/subscriptions/{subscription_id}` to accept a `refund` parameter.
    * Changed Line Item response format: added `account_code`.
    * Changed Subscription response format: added `pending_change` object.

    ### v2016-01-01 (Removed)

    ### v2014-06-22 (Removed)
  version: v2017-01-12
security:
- api_key: []
x-tagGroups:
- name: Customers
  tags:
  - account
  - note
  - account_acquisition
  - billing_info
  - subscription
  - subscription_change
  - shipping_address
- name: Products and Promotions
  tags:
  - plan
  - add-on
  - coupon
  - coupon_redemption
  - unique_coupon_code
- name: Invoices and Payments
  tags:
  - invoice
  - line_item
  - transaction
- name: Configuration
  tags:
  - site
tags:
- name: site
  x-displayName: Site
- name: plan
  x-displayName: Plan
  description: A plan tells Recurly how often and how much to charge your customers.
    Plans can be created with free trials, optional products (called add-ons), setup
    fees, and more.
- name: add-on
  x-displayName: Add-on
  description: An add-on is a charge billed each billing period in addition to a subscription’s
    base charge. Each plan may have one or more add-ons associated with it.
- name: account
  x-displayName: Account
  description: Accounts are core to managing your customers inside of Recurly. The
    account object stores the entire Recurly history of your customer and acts as
    the entry point for working with a customer's billing information, subscription
    data, transactions, invoices and more.
- name: note
  x-displayName: Account Note
  description: Account notes allow your team to leave notes on an account to add context,
    e.g. the reason for a refund, customer requests, and/or complaints. These notes
    are internal and not exposed to your customers.
- name: account_acquisition
  x-displayName: Account Acquisition Info
  description: Recurly offers the ability to record marketing data on customer accounts
    to match this data with revenue and billing data events in Recurly.
- name: billing_info
  x-displayName: Billing Info
  description: An account can have one stored payment method at a time. This can be
    a credit card, PayPal, or bank account. Billing info is usually filled out by
    the customer upon purchase or when they update their information.
- name: subscription
  x-displayName: Subscription
  description: Subscriptions are created when your customers subscribe to one of your
    plans. The customer's subscription tells Recurly when and how much to bill the
    customer.
- name: subscription_change
  x-displayName: Subscription Change
  description: Subscription changes alter subscription in a way that might affect
    the invoiced amount, such as changing the plan, add-ons, quantities, or shipping
    address. Changes can be made immediately in the current billing cycle or scheduled
    to take place at the next renewal.
- name: shipping_address
  x-displayName: Shipping Address
  description: Shipping addresses are tied to a customer's account. Each account can
    have up to 20 different shipping addresses, and if you have enabled multiple subscriptions
    per account, you can associate different shipping addresses to each subscription.
- name: invoice
  x-displayName: Invoice
  description: An invoice relates charges, credits, and payments together. When a
    subscription is created or renewed or a charge is created on the account, Recurly
    will sum the charges, discount or tax as appropriate, and send the invoice out
    for collection.
- name: line_item
  x-displayName: Line Item
  description: Line items are the charges and credits on your customer's invoices.
- name: transaction
  x-displayName: Transaction
  description: Purchasing information is sent to your payment gateway in an action
    called a transaction. This includes the customer's billing information and the
    amount of money to be charged, voided, or refunded.
- name: coupon
  x-displayName: Coupon
  description: Coupons can either be single codes that easily allow mass distribution
    by many customers or bulk coupons that can generate many unique coupons that can
    allow for individual delivery and tracking.
- name: coupon_redemption
  x-displayName: Coupon Redemption
  description: Coupon redemptions are created when a coupon is applied to an account.
    This allows you to track your promotions.
- name: unique_coupon_code
  x-displayName: Unique Coupon Code
  description: Unique coupon codes are generated from bulk coupons.
paths:
  "/sites":
    get:
      operationId: list_sites
      summary: List sites
      tags:
      - site
      description: This route is most useful for finding a site's ID for subsequent
        requests.
      parameters:
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      responses:
        '200':
          description: A list of sites.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}":
    get:
      operationId: get_site
      summary: Fetch a site
      tags:
      - site
      parameters:
      - "$ref": "#/components/parameters/site_id"
      responses:
        '200':
          description: A site.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Site"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts":
    get:
      tags:
      - account
      operationId: list_accounts
      summary: List a site's accounts
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_account_subscriber"
      - "$ref": "#/components/parameters/filter_account_past_due"
      responses:
        '200':
          description: A list of the site's accounts.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - account
      operationId: create_account
      summary: Create an account
      parameters:
      - "$ref": "#/components/parameters/site_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountCreate"
        required: true
      responses:
        '201':
          description: An account.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid parameters or an error running the billing info verification
            transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}":
    parameters:
    - "$ref": "#/components/parameters/site_id"
    - "$ref": "#/components/parameters/account_id"
    get:
      tags:
      - account
      operationId: get_account
      summary: Fetch an account
      responses:
        '200':
          description: An account.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - account
      operationId: update_account
      summary: Modify an account
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountUpdate"
        required: true
      responses:
        '200':
          description: An account.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid parameters or an error running the billing info verification
            transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMayHaveTransaction"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - account
      operationId: deactivate_account
      summary: Deactivate an account
      description: Deactivating an account permanently deletes its billing information
        and cancels any active subscriptions (canceled subscriptions will remain active
        until the end of the current billing cycle before expiring). We recommend
        closing accounts only when all business is concluded with a customer.
      responses:
        '200':
          description: An account.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
        '422':
          description: Account may already be inactive.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/acquisition":
    parameters:
    - "$ref": "#/components/parameters/site_id"
    - "$ref": "#/components/parameters/account_id"
    get:
      tags:
      - account
      - account_acquisition
      operationId: get_account_acquisition
      summary: Fetch an account's acquisition data
      responses:
        '200':
          description: An account's acquisition data.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountAcquisition"
        '404':
          description: Account has no acquisition data, or incorrect site or account
            ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - account
      - account_acquisition
      operationId: update_account_acquisition
      summary: Update an account's acquisition data
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountAcquisitionUpdatable"
        required: true
      responses:
        '200':
          description: An account's updated acquisition data.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountAcquisition"
        '400':
          description: Bad request; perhaps missing or invalid parameters.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - account
      - account_acquisition
      operationId: remove_account_acquisition
      summary: Remove an account's acquisition data
      responses:
        '204':
          description: Acquisition data was succesfully deleted.
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/reactivate":
    parameters:
    - "$ref": "#/components/parameters/site_id"
    - "$ref": "#/components/parameters/account_id"
    put:
      tags:
      - account
      operationId: reactivate_account
      summary: Reactivate an inactive account
      description: Reactivating an account will restore its history but the customer
        will need to provide new billing information to continue billing.
      responses:
        '200':
          description: An account.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Account is already active.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/balance":
    parameters:
    - "$ref": "#/components/parameters/site_id"
    - "$ref": "#/components/parameters/account_id"
    get:
      tags:
      - account
      operationId: get_account_balance
      summary: Fetch an account's balance and past due status
      responses:
        '200':
          description: An account's balance.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountBalance"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/billing_info":
    get:
      tags:
      - account
      - billing_info
      operationId: get_billing_info
      summary: Fetch an account's billing information
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      responses:
        '200':
          description: An account's billing information.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BillingInfo"
        '404':
          description: Account has no billing information, or incorrect site or account
            ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - account
      - billing_info
      operationId: update_billing_info
      summary: Set an account's billing information
      description: |
        If you're using Recurly.js to securely submit data from webforms without sending it through your server, you can associate the billing information with an account by passing in the `token_id`.

        For credit card payments you'll need the following required fields:

        - first_name
        - last_name
        - number
        - month
        - year
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BillingInfoCreate"
        required: true
      responses:
        '200':
          description: Updated billing information.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BillingInfo"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid billing information, or error running the verification
            transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMayHaveTransaction"
    delete:
      tags:
      - account
      - billing_info
      operationId: remove_billing_info
      summary: Remove an account's billing information
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      description: You may remove any stored billing information for an account. If
        the account has a subscription, the renewal will go into dunning unless the
        billing information is updated before the renewal occurs.
      responses:
        '200':
          description: Billing information deleted
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BooleanResponse"
        '404':
          description: Account has no billing information, or incorrect site or account
            ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/coupon_redemptions":
    get:
      tags:
      - account
      - coupon_redemption
      operationId: list_account_coupon_redemptions
      summary: Show the coupon redemptions for an account
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of the the coupon redemptions on an account.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CouponRedemptionList"
        '404':
          description: Incorrect site or invoice ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/coupon_redemptions/active":
    get:
      tags:
      - account
      - coupon_redemption
      operationId: get_active_coupon_redemption
      summary: Show the coupon redemption that is active on an account
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      responses:
        '200':
          description: An active coupon redemption on an account.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CouponRedemption"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - account
      - coupon_redemption
      operationId: create_coupon_redemption
      summary: Generate an active coupon redemption on an account
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CouponRedemptionCreate"
        required: true
      responses:
        '200':
          description: Returns the new coupon redemption.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CouponRedemption"
        '400':
          description: Bad request; perhaps missing or invalid parameters.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - account
      - coupon_redemption
      operationId: remove_coupon_redemption
      summary: Delete the active coupon redemption from an account
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      responses:
        '200':
          description: Coupon redemption deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CouponRedemption"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/invoices":
    get:
      tags:
      - invoice
      - account
      operationId: list_account_invoices
      summary: List an account's invoices
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of the account's invoices.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InvoiceList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - invoice
      - account
      operationId: create_invoice
      summary: Create an invoice for pending line items
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InvoiceCreate"
        required: true
      responses:
        '201':
          description: Returns the new invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Invoice"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid parameters, no pending line items, or error running
            the transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMayHaveTransaction"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/invoices/preview":
    post:
      tags:
      - invoice
      - account
      operationId: preview_invoice
      summary: Preview new invoice for pending line items
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InvoiceCreate"
        required: true
      responses:
        '200':
          description: Returns the new preview invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Invoice"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid parameter or pending line items.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/line_items":
    get:
      tags:
      - account
      - line_item
      operationId: list_account_line_items
      summary: List an account's line items
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_line_item_original"
      - "$ref": "#/components/parameters/filter_line_item_state"
      - "$ref": "#/components/parameters/filter_line_item_type"
      responses:
        '200':
          description: A list of the account's line items.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LineItemList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - account
      - line_item
      operationId: create_line_item
      summary: Create a new line item for the account
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LineItemCreate"
        required: true
      responses:
        '201':
          description: Returns the new line item.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LineItem"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/notes":
    get:
      tags:
      - account
      - note
      operationId: list_account_notes
      summary: Fetch a list of an account's notes
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/ids"
      responses:
        '200':
          description: A list of an account's notes.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountNoteList"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/notes/{account_note_id}":
    get:
      tags:
      - account
      - note
      operationId: get_account_note
      summary: Fetch an account note
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - name: account_note_id
        in: path
        description: Account Note ID.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: An account note.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountNote"
        '404':
          description: Incorrect site, account or note ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/shipping_addresses":
    get:
      tags:
      - account
      - shipping_address
      operationId: list_shipping_addresses
      summary: Fetch a list of an account's shipping addresses
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of an account's shipping addresses.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShippingAddressList"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - account
      - shipping_address
      operationId: create_shipping_address
      summary: Create a new shipping address for the account
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ShippingAddressCreate"
        required: true
      responses:
        '200':
          description: Returns the new shipping address.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShippingAddress"
        '400':
          description: Bad request; perhaps missing or invalid parameters.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/shipping_addresses/{shipping_address_id}":
    get:
      tags:
      - account
      - shipping_address
      operationId: get_shipping_address
      summary: Fetch an account's shipping address
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/shipping_address_id"
      responses:
        '200':
          description: A shipping address.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShippingAddress"
        '404':
          description: Incorrect site, account, or shipping address ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - account
      - shipping_address
      operationId: update_shipping_address
      summary: Update an account's shipping address
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/shipping_address_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ShippingAddressUpdate"
        required: true
      responses:
        '200':
          description: The updated shipping address.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShippingAddress"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site, account, or shipping address ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - account
      - shipping_address
      operationId: remove_shipping_address
      summary: Remove an account's shipping address
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/shipping_address_id"
      responses:
        '200':
          description: Shipping address deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BooleanResponse"
        '404':
          description: Incorrect site, account, or shipping address ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/subscriptions":
    get:
      tags:
      - subscription
      - account
      operationId: list_account_subscriptions
      summary: List an account's subscriptions
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_subscription_state"
      responses:
        '200':
          description: A list of the account's subscriptions.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or account ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/accounts/{account_id}/transactions":
    get:
      tags:
      - account
      - transaction
      operationId: list_account_transactions
      summary: List an account's transactions
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/account_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_transaction_type"
      - "$ref": "#/components/parameters/filter_transaction_success"
      responses:
        '200':
          description: A list of the account's transactions.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/acquisitions":
    get:
      tags:
      - account_acquisition
      operationId: list_account_acquisition
      summary: List a site's account acquisition data
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of the site's account acquisition data.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountAcquisitionList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/coupons":
    get:
      tags:
      - coupon
      operationId: list_coupons
      summary: List a site's coupons
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of the site's coupons.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CouponList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - coupon
      operationId: create_coupon
      summary: Create a new coupon
      parameters:
      - "$ref": "#/components/parameters/site_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CouponCreate"
        required: true
      responses:
        '201':
          description: A new coupon.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Coupon"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/coupons/{coupon_id}":
    get:
      tags:
      - coupon
      operationId: get_coupon
      summary: Fetch a coupon
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/coupon_id"
      responses:
        '200':
          description: A coupon.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Coupon"
        '404':
          description: Incorrect site or coupon ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - coupon
      operationId: update_coupon
      summary: Update an active coupon
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/coupon_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CouponUpdate"
        required: true
      responses:
        '200':
          description: The updated coupon.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Coupon"
        '400':
          description: Bad request, perhaps invalid JSON?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or coupon ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/coupons/{coupon_id}/generate":
    post:
      tags:
      - coupon
      - unique_coupon_code
      operationId: generate_unique_coupon_codes
      summary: Generate unique coupon codes
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/coupon_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CouponBulkCreate"
        required: true
      responses:
        '201':
          description: The `Location` header will specify the location created coupon
            codes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Empty"
        '400':
          description: Invalid or unpermitted parameter; perhaps you tried to generate
            more than 200 codes at a time?
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or coupon ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/coupons/{coupon_id}/unique_coupon_codes":
    get:
      tags:
      - coupon
      - unique_coupon_code
      operationId: list_unique_coupon_codes
      summary: List unique coupon codes associated with a bulk coupon
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/coupon_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of unique coupon codes that were generated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UniqueCouponCodeList"
        '404':
          description: Incorrect site or coupon ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices":
    get:
      tags:
      - invoice
      operationId: list_invoices
      summary: List a site's invoices
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of the site's invoices.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InvoiceList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices/{invoice_id}":
    get:
      tags:
      - invoice
      operationId: get_invoice
      summary: Fetch an invoice
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/invoice_id"
      responses:
        '200':
          description: An invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Invoice"
        '404':
          description: Incorrect site or invoice ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices/{invoice_id}/collect":
    put:
      tags:
      - invoice
      operationId: collect_invoice
      summary: Collect a pending or past due, automatic invoice
      description: Force a collection attempt using the stored billing information.
        This will trigger a transaction outside of Recurly's normal retry logic.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/invoice_id"
      responses:
        '200':
          description: The updated invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Invoice"
        '404':
          description: Incorrect site or invoice ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Tried collecting a manual or closed invoice, or there was an
            error processing the transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMayHaveTransaction"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices/{invoice_id}/mark_failed":
    put:
      tags:
      - invoice
      operationId: fail_invoice
      summary: Mark an open invoice as failed
      description: |
        Indicates that the invoice was not successfully paid for and that collection attempts should stop. This functionality is mostly used to halt the dunning procedures for an invoice.

        Only invoices with the `pending`, `processing` or `past_due` states can be marked as failed.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/invoice_id"
      responses:
        '200':
          description: The updated invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Invoice"
        '404':
          description: Incorrect site or invoice ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Tried marking a closed (successful or failed) invoice as failed.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices/{invoice_id}/mark_successful":
    put:
      tags:
      - invoice
      operationId: mark_invoice_successful
      summary: Mark an open invoice as successful
      description: |
        Indicates that the invoice was successfully paid for and that automated collection attempts should stop - this functionality is typically used to indicate that payment was received via another method and that revenue should be recognized.

        Only invoices with the `pending`, `processing`, `past_due` or `failed` states can be marked as paid.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/invoice_id"
      responses:
        '200':
          description: The updated invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Invoice"
        '404':
          description: Incorrect site or invoice ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Tried marking a closed (successful or failed) invoice as successful.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices/{invoice_id}/reopen":
    put:
      tags:
      - invoice
      operationId: reopen_invoice
      summary: Reopen a closed, manual invoice
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/invoice_id"
      responses:
        '200':
          description: The updated invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Invoice"
        '404':
          description: Incorrect site or invoice ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Tried reopening an automatic transaction, or an invoice that
            wasn't closed (`successful` or `failed`).
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices/{invoice_id}/line_items":
    get:
      tags:
      - invoice
      - line_item
      operationId: list_invoice_line_items
      summary: List an invoice's line items
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/invoice_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_line_item_original"
      - "$ref": "#/components/parameters/filter_line_item_state"
      - "$ref": "#/components/parameters/filter_line_item_type"
      responses:
        '200':
          description: A list of the invoice's line items.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LineItemList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/invoices/{invoice_id}/coupon_redemptions":
    get:
      tags:
      - invoice
      - coupon_redemption
      operationId: list_invoice_coupon_redemptions
      summary: Show the coupon redemptions applied to an invoice
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/invoice_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of the the coupon redemptions associated with the invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CouponRedemptionList"
        '404':
          description: Incorrect site or invoice ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/line_items":
    get:
      tags:
      - line_item
      operationId: list_line_items
      summary: List a site's line items
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_line_item_original"
      - "$ref": "#/components/parameters/filter_line_item_state"
      - "$ref": "#/components/parameters/filter_line_item_type"
      responses:
        '200':
          description: A list of the site's line items.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LineItemList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/line_items/{line_item_id}":
    get:
      tags:
      - line_item
      operationId: get_line_item
      summary: Fetch a line item
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/line_item_id"
      responses:
        '200':
          description: A line item.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LineItem"
        '404':
          description: Incorrect site or line item ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - line_item
      operationId: remove_line_item
      summary: Delete an uninvoiced line item
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/line_item_id"
      responses:
        '200':
          description: Line item deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BooleanResponse"
        '404':
          description: Incorrect site or line item ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Only pending line items can be deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/plans":
    get:
      tags:
      - plan
      operationId: list_plans
      summary: List a site's plans
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_state"
      responses:
        '200':
          description: A list of plans.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - plan
      operationId: create_plan
      summary: Create a plan
      parameters:
      - "$ref": "#/components/parameters/site_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanCreate"
        required: true
      responses:
        '201':
          description: A plan.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Plan"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as 'Code has already been taken.'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/plans/{plan_id}":
    get:
      tags:
      - plan
      operationId: get_plan
      summary: Fetch a plan
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      responses:
        '200':
          description: A plan.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Plan"
        '404':
          description: Incorrect site or plan ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - plan
      operationId: update_plan
      summary: Update a plan
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanUpdate"
        required: true
      responses:
        '201':
          description: A plan.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Plan"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as 'Code has already been taken.'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - plan
      operationId: remove_plan
      summary: Remove a plan
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      responses:
        '200':
          description: Plan deleted
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Plan"
        '404':
          description: Incorrect site or plan ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/plans/{plan_id}/add_ons":
    get:
      tags:
      - add-on
      - plan
      operationId: list_plan_add_ons
      summary: List a plan's add-ons
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_state"
      responses:
        '200':
          description: A list of add-ons.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddOnList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or plan ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - add-on
      - plan
      operationId: create_plan_add_on
      summary: Create an add-on
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddOnCreate"
        required: true
      responses:
        '201':
          description: An add-on.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddOn"
        '404':
          description: Incorrect site ID or plan ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as 'Code has already been taken.'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/plans/{plan_id}/add_ons/{add_on_id}":
    get:
      tags:
      - plan
      - add-on
      operationId: get_plan_add_on
      summary: Fetch a plan's add-on
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      - "$ref": "#/components/parameters/add_on_id"
      responses:
        '200':
          description: An add-on.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddOn"
        '404':
          description: Incorrect site, plan or add-on ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - plan
      - add-on
      operationId: update_plan_add_on
      summary: Update an add-on
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      - "$ref": "#/components/parameters/add_on_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddOnUpdate"
        required: true
      responses:
        '201':
          description: An add-on.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddOn"
        '404':
          description: Incorrect site, plan, or add-on ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as 'Code has already been taken.'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - plan
      - add-on
      operationId: remove_plan_add_on
      summary: Remove an add-on
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/plan_id"
      - "$ref": "#/components/parameters/add_on_id"
      responses:
        '200':
          description: Add-on deleted
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddOn"
        '404':
          description: Incorrect site, plan, or add-on ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/add_ons":
    get:
      tags:
      - add-on
      operationId: list_add_ons
      summary: List a site's add-ons
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_state"
      responses:
        '200':
          description: A list of add-ons.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddOnList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or add-on ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/add_ons/{add_on_id}":
    get:
      tags:
      - add-on
      operationId: get_add_on
      summary: Fetch an add-on
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/add_on_id"
      responses:
        '200':
          description: An add-on.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddOn"
        '404':
          description: Incorrect site or add-on ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/subscriptions":
    get:
      tags:
      - subscription
      operationId: list_subscriptions
      summary: List a site's subscriptions
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_subscription_state"
      responses:
        '200':
          description: A list of the site's subscriptions.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - subscription
      operationId: create_subscription
      summary: Create a new subscription
      parameters:
      - "$ref": "#/components/parameters/site_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubscriptionCreate"
        required: true
      responses:
        '201':
          description: A subscription.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Subscription"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as 'You already have a subscription
            to this plan.' error running the verification transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMayHaveTransaction"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/subscriptions/{subscription_id}":
    get:
      tags:
      - subscription
      operationId: get_subscription
      summary: Fetch a subscription
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      responses:
        '200':
          description: A subscription.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Subscription"
        '404':
          description: Incorrect site or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      tags:
      - subscription
      operationId: modify_subscription
      summary: Modify a subscription
      description: This only lets you change the subscription settings that have no
        impact on the billed amount. Use the `/sites/{site_id}/subscriptions/{subscription_id}/change`
        to make those changes.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubscriptionUpdate"
        required: true
      responses:
        '200':
          description: A subscription.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Subscription"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - subscription
      operationId: terminate_subscription
      summary: Terminate a subscription
      description: |
        Immediately expires the subscription.

        If the subscription has a paid invoice you may choose to refund all, part or none of last invoice's amount.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      - name: refund
        in: query
        description: |
          The type of refund to perform:

          * `full` - Performs a full refund of the last invoice for the current subscription term.
          * `partial` - Prorates a refund based on the amount of time remaining in the current bill cycle.
          * `none` - Terminates the subscription without a refund.

          In the event that the most recent invoice is a $0 invoice paid entirely by credit, Recurly will apply the credit back to the customer’s account.

          You may also terminate a subscription with no refund and then manually refund specific invoices.
        schema:
          type: string
          enum:
          - full
          - partial
          - none
          default: none
      responses:
        '200':
          description: An expired subscription.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Subscription"
        '404':
          description: Incorrect site ID or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: 'A validation error such as "Cannot expire an inactive subscription."
            or "Please provide valid values for these parameters: refund."'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/subscriptions/{subscription_id}/cancel":
    put:
      tags:
      - subscription
      operationId: cancel_subscription
      summary: Cancel a subscription
      description: |
        A canceled subscription will continue through its current billing cycle. At the end of the current billing cycle the subscription will expire and the customer will no longer be billed.

        Canceled subscriptions can be reactivated until the end of the billing cycle.

        When a future subscription (`state=future`) is canceled it becomes failed `state=failed` and cannot be reactivated.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      responses:
        '200':
          description: A canceled or failed subscription.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Subscription"
        '404':
          description: Incorrect site or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as "Only active and future subscriptions
            can be canceled".
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/subscriptions/{subscription_id}/reactivate":
    put:
      tags:
      - subscription
      operationId: reactivate_subscription
      summary: Reactivate a canceled subscription
      description: |
        This will bring the subscription back to an active, renewing state on the customer's original billing cycle.

        Expired or failed subscriptions cannot be reactivated; instead a new subscription plan will need to be applied to the account.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      responses:
        '200':
          description: An active subscription.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Subscription"
        '404':
          description: Incorrect site or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as "Only canceled subscriptions can
            be reactivated".
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/subscriptions/{subscription_id}/change":
    get:
      tags:
      - subscription
      - subscription_change
      operationId: get_subscription_change
      summary: Fetch a subscription's pending change
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      responses:
        '200':
          description: A subscription's pending change.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionChange"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site ID or subscription ID or the subscription has
            no pending change.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Expired subscriptions cannot be changed.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      tags:
      - subscription
      - subscription_change
      operationId: create_subscription_change
      summary: Create a new subscription change
      description: Calling this will overwrite an existing, pending subscription change.
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubscriptionChangeCreate"
        required: true
      responses:
        '201':
          description: A subscription change.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionChange"
        '404':
          description: Incorrect site ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: A validation error such as "Subscription hasn't been changed"
            or error running the verification transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorMayHaveTransaction"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - subscription
      - subscription_change
      operationId: remove_subscription_change
      summary: Delete the pending subscription change
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      description: Deleting the pending subscription change will cause the current
        subscription settings to be used on the next renewal.
      responses:
        '200':
          description: A subscription change.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BooleanResponse"
        '422':
          description: Activated subscription changes cannot be deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/subscriptions/{subscription_id}/invoices":
    get:
      tags:
      - invoice
      - subscription
      operationId: list_subscription_invoices
      summary: List a subscription's invoices
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      responses:
        '200':
          description: A list of the subscription's invoices.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InvoiceList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/subscriptions/{subscription_id}/line_items":
    get:
      tags:
      - subscription
      operationId: list_subscription_line_items
      summary: List a subscription's line items
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/subscription_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_line_item_original"
      - "$ref": "#/components/parameters/filter_line_item_state"
      - "$ref": "#/components/parameters/filter_line_item_type"
      responses:
        '200':
          description: A list of the subscription's line items.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LineItemList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/transactions":
    get:
      tags:
      - transaction
      operationId: list_transactions
      summary: List a site's transactions
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/ids"
      - "$ref": "#/components/parameters/limit"
      - "$ref": "#/components/parameters/order"
      - "$ref": "#/components/parameters/sort_dates"
      - "$ref": "#/components/parameters/filter_begin_time"
      - "$ref": "#/components/parameters/filter_end_time"
      - "$ref": "#/components/parameters/filter_transaction_type"
      - "$ref": "#/components/parameters/filter_transaction_success"
      responses:
        '200':
          description: A list of the site's transactions.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionList"
        '400':
          description: Invalid or unpermitted parameter.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '404':
          description: Incorrect site or subscription ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/transactions/{transaction_id}":
    get:
      tags:
      - transaction
      operationId: get_transaction
      summary: Fetch a transaction
      parameters:
      - "$ref": "#/components/parameters/site_id"
      - "$ref": "#/components/parameters/transaction_id"
      responses:
        '200':
          description: A transaction.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Transaction"
        '404':
          description: Incorrect site or transaction ID.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/unique_coupon_codes/{unique_coupon_code_id}":
    parameters:
    - "$ref": "#/components/parameters/site_id"
    - "$ref": "#/components/parameters/unique_coupon_code_id"
    get:
      tags:
      - unique_coupon_code
      operationId: get_unique_coupon_code
      summary: Fetch a unique coupon code
      responses:
        '200':
          description: A unique coupon code.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UniqueCouponCode"
        '400':
          description: Bad request; perhaps missing or invalid parameters.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      tags:
      - unique_coupon_code
      operationId: deactivate_unique_coupon_code
      summary: Deactivate a unique coupon code
      description: Expire a unique code, making that specific code no longer redeemable.
        The parent bulk coupon will not be affected.
      responses:
        '200':
          description: A unique coupon code.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UniqueCouponCode"
        '400':
          description: Bad request; perhaps missing or invalid parameters.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Unique coupon code cannot be deactivated for the provided reason.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/sites/{site_id}/unique_coupon_codes/{unique_coupon_code_id}/restore":
    parameters:
    - "$ref": "#/components/parameters/site_id"
    - "$ref": "#/components/parameters/unique_coupon_code_id"
    put:
      tags:
      - unique_coupon_code
      operationId: reactivate_unique_coupon_code
      summary: Restore a unique coupon code
      responses:
        '200':
          description: A unique coupon code.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UniqueCouponCode"
        '400':
          description: Bad request; perhaps missing or invalid parameters.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: Unique coupon code cannot be restored for the provided reason.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
servers:
- url: https://partner-api.recurly.com
components:
  parameters:
    site_id:
      name: site_id
      in: path
      description: Site ID or subdomain. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For subdomain use prefix `subdomain-`, e.g. `subdomain-recurly`.
      required: true
      schema:
        type: string
    account_id:
      name: account_id
      in: path
      description: Account ID or code. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For code use prefix `code-`, e.g. `code-bob`.
      required: true
      schema:
        type: string
    add_on_id:
      name: add_on_id
      in: path
      description: Add-on ID or code. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For code use prefix `code-`, e.g. `code-gold`.
      required: true
      schema:
        type: string
    coupon_id:
      name: coupon_id
      in: path
      description: Coupon ID or code. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For code use prefix `code-`, e.g. `code-10off`.
      required: true
      schema:
        type: string
    credit_payment_id:
      name: credit_payment_id
      in: path
      description: Credit Payment ID or UUID. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For UUID use prefix `uuid-`, e.g. `uuid-123457890`.
      required: true
      schema:
        type: string
    invoice_id:
      name: invoice_id
      in: path
      description: Invoice ID or number. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For number use prefix `number-`, e.g. `number-1000`.
      required: true
      schema:
        type: string
    line_item_id:
      name: line_item_id
      in: path
      description: Line Item ID.
      required: true
      schema:
        type: string
    plan_id:
      name: plan_id
      in: path
      description: Plan ID or code. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For code use prefix `code-`, e.g. `code-gold`.
      required: true
      schema:
        type: string
    shipping_address_id:
      name: shipping_address_id
      in: path
      description: Shipping Address ID.
      required: true
      schema:
        type: string
    subscription_id:
      name: subscription_id
      in: path
      description: Subscription ID or UUID. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For UUID use prefix `uuid-`, e.g. `uuid-123457890`.
      required: true
      schema:
        type: string
    transaction_id:
      name: transaction_id
      in: path
      description: Transaction ID or UUID. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For UUID use prefix `uuid-`, e.g. `uuid-123457890`.
      required: true
      schema:
        type: string
    unique_coupon_code_id:
      name: unique_coupon_code_id
      in: path
      description: Unique Coupon Code ID or code. For ID no prefix is used e.g. `e28zov4fw0v2`.
        For code use prefix `code-`, e.g. `code-abc-8dh2-def`.
      required: true
      schema:
        type: string
    ids:
      name: ids
      in: query
      description: |
        Filter results by their IDs. Up to 200 IDs can be passed at once using
        commas as separators, e.g. `ids=h1at4d57xlmy,gyqgg0d3v9n1,jrsm5b4yefg6`.

        **Important notes:**

        * The `ids` parameter cannot be used with any other ordering or filtering
          parameters (`limit`, `order`, `sort`, `begin_time`, `end_time`, etc)
        * Invalid or unknown IDs will be ignored, so you should check that the
          results correspond to your request.
        * Records are returned in an arbitrary order. Since results are all
          returned at once you can sort the records yourself.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    limit:
      name: limit
      in: query
      description: Limit number of records 1-200.
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
    order:
      name: order
      in: query
      description: Sort order.
      schema:
        type: string
        enum:
        - asc
        - desc
        default: desc
    sort_dates:
      name: sort
      in: query
      description: |
        Sort field. You *really* only want to sort by `updated_at` in ascending
        order. In descending order updated records will move behind the cursor and could
        prevent some records from being returned.
      schema:
        type: string
        enum:
        - created_at
        - updated_at
        default: created_at
    filter_state:
      name: state
      in: query
      description: Filter by state.
      schema:
        type: string
        enum:
        - active
        - inactive
    filter_subscription_state:
      name: state
      in: query
      description: |
        Filter by state.

        - When `state=active`, `state=canceled`, `state=expired`, or `state=future`, subscriptions with states that match the query and only those subscriptions will be returned.
        - When `state=in_trial`, only subscriptions that have a trial_started_at date earlier than now and a trial_ends_at date later than now will be returned.
        - When `state=live`, only subscriptions that are in an active, canceled, or future state or are in trial will be returned.
      schema:
        type: string
        enum:
        - active
        - canceled
        - expired
        - future
        - in_trial
        - live
    filter_begin_time:
      name: begin_time
      in: query
      description: |
        Filter by begin_time when `sort=created_at` or `sort=updated_at`.
        **Note:** this value is an ISO8601 timestamp. A partial timestamp that does not include a time zone will default to UTC.
      schema:
        type: string
        format: date-time
    filter_end_time:
      name: end_time
      in: query
      description: |
        Filter by end_time when `sort=created_at` or `sort=updated_at`.
        **Note:** this value is an ISO8601 timestamp. A partial timestamp that does not include a time zone will default to UTC.
      schema:
        type: string
        format: date-time
    filter_account_subscriber:
      name: subscriber
      in: query
      description: |
        Filter accounts with or without a subscription in the `active`,
        `canceled`, or `future` state.
      schema:
        type: boolean
    filter_account_past_due:
      name: past_due
      in: query
      description: Filter for accounts with an invoice in the `past_due` state.
      schema:
        type: string
        enum:
        - true
    filter_line_item_original:
      name: original
      in: query
      description: Filter by original field.
      schema:
        type: string
        enum:
        - true
    filter_line_item_state:
      name: state
      in: query
      description: Filter by state field.
      schema:
        type: string
        enum:
        - invoiced
        - pending
    filter_line_item_type:
      name: type
      in: query
      description: Filter by type field.
      schema:
        type: string
        enum:
        - charge
        - credit
    filter_transaction_type:
      name: type
      in: query
      description: Filter by type field.
      schema:
        type: string
        enum:
        - purchase
        - refund
    filter_transaction_success:
      name: success
      in: query
      description: Filter by success field.
      schema:
        type: string
        enum:
        - true
  securitySchemes:
    api_key:
      type: http
      description: Enter the API key as the username and set the password to an empty
        string. You can locate and manage your API keys from the [API Credentials](https://app.recurly.com/go/developer/api_keys)
        page.
      scheme: basic
  schemas:
    Empty:
      type: object
      properties: {}
    AccountAcquisitionList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/AccountAcquisition"
    AccountList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Account"
    AccountNoteList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/AccountNote"
    AddOnList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/AddOn"
    CreditPaymentList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/CreditPayment"
    CouponList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Coupon"
    CouponRedemptionList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/CouponRedemption"
    InvoiceList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Invoice"
    LineItemList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/LineItem"
    PlanList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Plan"
    SiteList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Site"
    SubscriptionList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Subscription"
    TransactionList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Transaction"
    Account:
      allOf:
      - "$ref": "#/components/schemas/AccountReadOnly"
      - "$ref": "#/components/schemas/AccountResponse"
    AccountAcquisition:
      allOf:
      - "$ref": "#/components/schemas/AccountAcquisitionUpdatable"
      - "$ref": "#/components/schemas/AccountAcquisitionReadOnly"
    AccountAcquisitionUpdatable:
      type: object
      properties:
        cost:
          type: object
          x-class-name: AccountAcquisitionCost
          title: Account balance
          items:
            type: object
          properties:
            currency:
              type: string
              title: Currency
              description: 3-letter ISO 4217 currency code.
              maxLength: 3
            amount:
              type: number
              format: float
              title: Amount
              description: The amount of the corresponding currency used to acquire
                the account.
        channel:
          type: string
          description: The channel through which the account was acquired.
          enum:
          - referral
          - social_media
          - email
          - paid_search
          - organic_search
          - direct_traffic
          - marketing_content
          - blog
          - events
          - outbound_sales
          - advertising
          - public_relations
          - other
        subchannel:
          type: string
          description: An arbitrary subchannel string representing a distinction/subcategory
            within a broader channel.
        campaign:
          type: string
          description: An arbitrary identifier for the marketing campaign that led
            to the acquisition of this account.
    AccountAcquisitionReadOnly:
      type: object
      properties:
        id:
          type: string
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        account:
          "$ref": "#/components/schemas/AccountMini"
        created_at:
          type: string
          format: date-time
          description: When the account acquisition data was created.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When the account acquisition data was last changed.
          readOnly: true
    AccountReadOnly:
      type: object
      properties:
        id:
          type: string
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        state:
          type: string
          description: Accounts can be either active or inactive.
          readOnly: true
          enum:
          - active
          - inactive
        hosted_login_token:
          type: string
          description: 'The unique token for automatically logging the account in
            to the hosted management pages. You may automatically log the user into
            their hosted management pages by directing the user to: `https://{subdomain}.recurly.com/account/{hosted_login_token}`.'
          readOnly: true
          maxLength: 32
        shipping_addresses:
          type: array
          description: The shipping addresses on the account.
          items:
            "$ref": "#/components/schemas/ShippingAddress"
        created_at:
          type: string
          format: date-time
          description: When the account was created.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When the account was last changed.
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          description: If present, when the account was last marked inactive.
          readOnly: true
    AccountCreate:
      allOf:
      - type: object
        properties:
          code:
            type: string
            description: The unique identifier of the account. This cannot be changed
              once the account is created.
            maxLength: 50
          acquisition:
            "$ref": "#/components/schemas/AccountAcquisitionUpdatable"
          shipping_addresses:
            type: array
            items:
              "$ref": "#/components/schemas/ShippingAddressCreate"
        required:
        - code
      - "$ref": "#/components/schemas/AccountUpdate"
    AccountUpdate:
      type: object
      properties:
        username:
          type: string
          description: A secondary value for the account.
          maxLength: 255
        email:
          type: string
          format: email
          description: The email address used for communicating with this customer.
            The customer will also use this email address to log into your hosted
            account management pages. This value does not need to be unique.
          maxLength: 255
        cc_emails:
          type: string
          description: Additional email address that should receive account correspondence.
            These should be separated only by commas. These CC emails will receive
            all emails that the `email` field also receives.
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 50
        vat_number:
          type: string
          description: The VAT number of the account (to avoid having the VAT applied).
            This is only used for manually collected invoices.
          maxLength: 20
        tax_exempt:
          type: boolean
          description: The tax status of the account. `true` exempts tax on the account,
            `false` applies tax on the account.
        address:
          "$ref": "#/components/schemas/Address"
        billing_info:
          "$ref": "#/components/schemas/BillingInfoCreate"
    AccountResponse:
      type: object
      properties:
        code:
          type: string
          description: The unique identifier of the account. This cannot be changed
            once the account is created.
          maxLength: 50
          readOnly: true
        username:
          type: string
          description: A secondary value for the account.
          maxLength: 255
        email:
          type: string
          format: email
          description: The email address used for communicating with this customer.
            The customer will also use this email address to log into your hosted
            account management pages. This value does not need to be unique.
          maxLength: 255
        cc_emails:
          type: string
          description: Additional email address that should receive account correspondence.
            These should be separated only by commas. These CC emails will receive
            all emails that the `email` field also receives.
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 50
        vat_number:
          type: string
          description: The VAT number of the account (to avoid having the VAT applied).
            This is only used for manually collected invoices.
          maxLength: 20
        tax_exempt:
          type: boolean
          description: The tax status of the account. `true` exempts tax on the account,
            `false` applies tax on the account.
        address:
          "$ref": "#/components/schemas/Address"
        billing_info:
          "$ref": "#/components/schemas/BillingInfo"
    AccountNote:
      type: object
      required:
      - message
      properties:
        id:
          type: string
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        account_id:
          type: string
        user:
          "$ref": "#/components/schemas/User"
        message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    AccountMini:
      type: object
      title: Account mini details
      properties:
        id:
          type: string
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        code:
          type: string
          description: The unique identifier of the account.
          maxLength: 50
        email:
          type: string
          format: email
          description: The email address used for communicating with this customer.
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
    AccountBalance:
      type: object
      properties:
        object:
          type: string
          title: Object type
          readOnly: true
        account:
          "$ref": "#/components/schemas/AccountMini"
        past_due:
          type: boolean
        balances:
          type: array
          items:
            "$ref": "#/components/schemas/AccountBalanceAmount"
    AccountBalanceAmount:
      type: object
      title: Balance Amount
      properties:
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        amount:
          type: number
          format: float
          title: Amount
          description: Total amount the account is past due.
    Address:
      type: object
      properties:
        first_name:
          type: string
          title: First name
        last_name:
          type: string
          title: Last name
        phone:
          type: string
          title: Phone number
        street1:
          type: string
          title: Street 1
        street2:
          type: string
          title: Street 2
        city:
          type: string
          title: City
        region:
          type: string
          title: State/Province
          description: State or province.
        postal_code:
          type: string
          title: Zip/Postal code
          description: Zip or postal code.
        country:
          type: string
          title: Country
          description: Country, 2-letter ISO code.
    AddOnMini:
      type: object
      title: Add-on mini details
      description: Just the important parts.
      properties:
        id:
          type: string
          title: Add-on ID
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        code:
          type: string
          title: Add-on code
          description: The unique identifier for the add-on within its plan.
          maxLength: 50
        name:
          type: string
          title: Name
          description: Describes your add-on and will appear in subscribers' invoices.
          maxLength: 255
        accounting_code:
          type: string
          title: Accounting code
          description: Accounting code for invoice line items for this add-on. If
            no value is provided, it defaults to add-on's code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
    AddOn:
      type: object
      title: Add-on
      description: Full add-on details.
      properties:
        id:
          type: string
          title: Add-on ID
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        plan_id:
          type: string
          title: Plan ID
          maxLength: 13
          readOnly: true
        code:
          type: string
          title: Add-on code
          description: The unique identifier for the add-on within its plan.
          maxLength: 50
        state:
          type: string
          title: State
          description: Add-ons can be either active or inactive.
          readOnly: true
          enum:
          - active
          - inactive
        name:
          type: string
          title: Name
          description: Describes your add-on and will appear in subscribers' invoices.
          maxLength: 255
        accounting_code:
          type: string
          title: Accounting code
          description: Accounting code for invoice line items for this add-on. If
            no value is provided, it defaults to add-on's code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        tax_code:
          type: string
          title: Tax code
          description: Used by Avalara, Vertex, and Recurly’s EU VAT tax feature.
            The tax code values are specific to each tax system. If you are using
            Recurly’s EU VAT feature `P0000000` is `physical`, `D0000000` is `digital`,
            and an empty string is `unknown`.
          maxLength: 50
        display_quantity:
          type: boolean
          title: Display quantity?
          description: Determines if the quantity field is displayed on the hosted
            pages for the add-on.
          default: false
        default_quantity:
          type: integer
          title: Default quantity
          description: Default quantity for the hosted pages.
          default: 1
        currencies:
          type: array
          title: Add-on pricing
          items:
            "$ref": "#/components/schemas/AddOnPricing"
          minItems: 1
        created_at:
          type: string
          format: date-time
          title: Created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: Last updated at
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          title: Deleted at
          readOnly: true
      required:
      - code
      - name
      - currencies
    AddOnPricing:
      type: object
      properties:
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        unit_amount:
          type: number
          format: float
          title: Unit price
          minimum: 0
          maximum: 100000
      required:
      - currency
      - unit_amount
    AddOnCreate:
      type: object
      title: Add-on
      description: Full add-on details.
      properties:
        code:
          type: string
          title: Add-on code
          description: The unique identifier for the add-on within its plan.
          maxLength: 50
        name:
          type: string
          title: Name
          description: Describes your add-on and will appear in subscribers' invoices.
          maxLength: 255
        plan_id:
          type: string
          title: Plan ID
          maxLength: 13
          readOnly: true
        accounting_code:
          type: string
          title: Accounting code
          description: Accounting code for invoice line items for this add-on. If
            no value is provided, it defaults to add-on's code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        display_quantity:
          type: boolean
          title: Display quantity?
          description: Determines if the quantity field is displayed on the hosted
            pages for the add-on.
          default: false
        default_quantity:
          type: integer
          title: Default quantity
          description: Default quantity for the hosted pages.
          default: 1
        tax_code:
          type: string
          title: Tax code
          description: Optional field used by Avalara, Vertex, and Recurly's EU VAT
            tax feature to determine taxation rules. If you have your own AvaTax or
            Vertex account configured, use their tax codes to assign specific tax
            rules. If you are using Recurly's EU VAT feature, you can use values of
            `unknown`, `physical`, or `digital`.
          maxLength: 50
        currencies:
          type: array
          title: Add-on pricing
          items:
            "$ref": "#/components/schemas/AddOnPricing"
          minItems: 1
      required:
      - code
      - name
      - currencies
    AddOnUpdate:
      type: object
      title: Add-on
      description: Full add-on details.
      properties:
        id:
          type: string
          title: Add-on ID
          maxLength: 13
          readOnly: true
        code:
          type: string
          title: Add-on code
          description: The unique identifier for the add-on within its plan.
          maxLength: 50
        name:
          type: string
          title: Name
          description: Describes your add-on and will appear in subscribers' invoices.
          maxLength: 255
        accounting_code:
          type: string
          title: Accounting code
          description: Accounting code for invoice line items for this add-on. If
            no value is provided, it defaults to add-on's code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        tax_code:
          type: string
          title: Tax code
          description: Optional field used by Avalara, Vertex, and Recurly's EU VAT
            tax feature to determine taxation rules. If you have your own AvaTax or
            Vertex account configured, use their tax codes to assign specific tax
            rules. If you are using Recurly's EU VAT feature, you can use values of
            `unknown`, `physical`, or `digital`.
          maxLength: 50
        display_quantity:
          type: boolean
          title: Display quantity?
          description: Determines if the quantity field is displayed on the hosted
            pages for the add-on.
          default: false
        default_quantity:
          type: integer
          title: Default quantity
          description: Default quantity for the hosted pages.
          default: 1
        currencies:
          type: array
          title: Add-on pricing
          items:
            "$ref": "#/components/schemas/AddOnPricing"
          minItems: 1
    BillingInfo:
      type: object
      properties:
        id:
          type: string
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        account_id:
          type: string
          maxLength: 13
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        company:
          type: string
          maxLength: 100
        address:
          "$ref": "#/components/schemas/Address"
        vat_number:
          type: string
          description: Customer's VAT number (to avoid having the VAT applied). This
            is only used for automatically collected invoices.
        valid:
          type: boolean
          readOnly: true
        payment_method:
          "$ref": "#/components/schemas/PaymentMethod"
        fraud:
          type: object
          x-class-name: FraudInfo
          title: Fraud information
          description: Most recent fraud result.
          readOnly: true
          properties:
            score:
              type: integer
              title: Kount score
              minimum: 1
              maximum: 99
            decision:
              type: string
              title: Kount decision
              enum:
              - approve
              - review
              - decline
              - escalate
              maxLength: 10
            risk_rules_triggered:
              type: object
              title: Kount rules
        created_at:
          type: string
          format: date-time
          description: When the billing information was created.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: When the billing information was last changed.
          readOnly: true
        updated_by:
          type: object
          x-class-name: BillingInfoUpdatedBy
          readOnly: true
          properties:
            ip:
              type: string
              description: Customer's IP address when updating their billing information.
              maxLength: 20
            country:
              type: string
              description: Country of IP address, if known by Recurly.
              maxLength: 2
    BillingInfoCreate:
      type: object
      properties:
        token_id:
          type: string
          title: Token ID
          description: A token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token).
          maxLength: 22
        first_name:
          type: string
          title: First name
          maxLength: 50
        last_name:
          type: string
          title: Last name
          maxLength: 50
        company:
          type: string
          title: Company name
          maxLength: 100
        address:
          "$ref": "#/components/schemas/Address"
        number:
          type: string
          title: Credit card number
          description: Credit card number, spaces and dashes are accepted.
        month:
          type: string
          title: Expiration month
          maxLength: 2
        year:
          type: string
          title: Expiration year
          maxLength: 4
        cvv:
          type: string
          title: Security code or CVV
          description: "*STRONGLY RECOMMENDED*"
          maxLength: 4
        vat_number:
          type: string
          title: VAT number
        ip_address:
          type: string
          title: IP address
          description: "*STRONGLY RECOMMENDED* Customer's IP address when updating
            their billing information."
          maxLength: 20
        amazon_billing_agreement_id:
          type: string
          title: Amazon billing agreement ID
        paypal_billing_agreement_id:
          type: string
          title: PayPal billing agreement ID
        fraud_session_id:
          type: string
          title: Fraud Session ID
    Coupon:
      type: object
      properties:
        id:
          type: string
          title: Coupon ID
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        code:
          type: string
          title: Coupon code
          description: The code the customer enters to redeem the coupon.
        name:
          type: string
          title: Name
          description: The internal name for the coupon.
        state:
          type: string
          title: State
          description: Indicates if the coupon is redeemable, and if it is not, why.
          enum:
          - redeemable
          - maxed_out
          - expired
        max_redemptions:
          type: integer
          title: Max redemptions
          description: A maximum number of redemptions for the coupon. The coupon
            will expire when it hits its maximum redemptions.
        max_redemptions_per_account:
          type: integer
          title: Max redemptions per account
          description: Redemptions per account is the number of times a specific account
            can redeem the coupon. Set redemptions per account to `1` if you want
            to keep customers from gaming the system and getting more than one discount
            from the coupon campaign.
        unique_coupon_codes_count:
          type: integer
          title: Unique coupon codes count
          description: When this number reaches `max_redemptions` the coupon will
            no longer be redeemable.
          readOnly: true
        duration:
          type: string
          title: Duration
          description: |
            - "single_use" coupons applies to the first invoice only.
            - "temporal" coupons will apply to invoices for the duration determined by the `temporal_unit` and `temporal_amount` attributes.
          enum:
          - forever
          - single_use
          - temporal
        temporal_amount:
          type: integer
          title: Temporal amount
          description: If `duration` is "temporal" than `temporal_amount` is an integer
            which is multiplied by `temporal_unit` to define the duration that the
            coupon will be applied to invoices for.
        temporal_unit:
          type: string
          title: Temporal unit
          description: If `duration` is "temporal" than `temporal_unit` is multiplied
            by `temporal_amount` to define the duration that the coupon will be applied
            to invoices for.
          enum:
          - day
          - week
          - month
          - year
        free_trial_unit:
          type: string
          title: Free trial unit
          description: Description of the unit of time the coupon is for. Used with
            `free_trial_amount` to determine the duration of time the coupon is for.
          enum:
          - day
          - week
          - month
        free_trial_amount:
          type: integer
          title: Free trial amount
          description: Sets the duration of time the `free_trial_unit` is for.
          minimum: 1
          maximum: 9999
        applies_to_all_plans:
          type: boolean
          title: Applies to all plans?
          description: The coupon is valid for all plans if true. If false then `plans`
            and `plans_names` will list the applicable plans.
          default: true
        applies_to_non_plan_charges:
          type: boolean
          title: Applied to all non-plan charges?
          description: The coupon is valid for one-time, non-plan charges if true.
          default: false
        plans_names:
          type: array
          title: 'Plan names (TODO: decide if this duplicates `plans`)'
          description: TODO
          items:
            type: string
        plans:
          type: array
          title: Plans
          items:
            "$ref": "#/components/schemas/PlanMini"
        redemption_resource:
          type: string
          title: Redemption resource
          description: Whether the discount is for all eligible charges on the account,
            or only a specific subscription.
          enum:
          - account
          - subscription
          default: account
        discount:
          "$ref": "#/components/schemas/CouponDiscount"
        coupon_type:
          type: string
          title: 'Coupon type (TODO: implement coupon generation)'
          description: Whether the coupon is "single_code" or "bulk". Bulk coupons
            will require a `unique_code_template` and will generate unique codes through
            the `/generate` endpoint.
          enum:
          - single_code
          - bulk
        hosted_page_description:
          type: string
          title: Hosted Payment Pages description
          description: This description will show up when a customer redeems a coupon
            on your Hosted Payment Pages, or if you choose to show the description
            on your own checkout page.
        invoice_description:
          type: string
          title: Invoice description
          description: Description of the coupon on the invoice.
          maxLength: 255
        redeem_by:
          type: string
          title: Redeem by
          description: The date and time the coupon will expire and can no longer
            be redeemed. Time is always 11:59:59, the end-of-day Pacific time.
          format: date-time
        created_at:
          type: string
          title: Created at
          format: date-time
          readOnly: true
        updated_at:
          type: string
          title: Last updated at
          format: date-time
          readOnly: true
        expired_at:
          type: string
          title: Expired at
          description: The date and time the coupon was expired early or reached its
            `max_redemptions`.
          format: date-time
    CouponCreate:
      allOf:
      - "$ref": "#/components/schemas/CouponUpdate"
      - type: object
        properties:
          code:
            type: string
            title: Coupon code
            description: The code the customer enters to redeem the coupon.
          discount_type:
            type: string
            title: Discount type
            description: The type of discount provided by the coupon (how the amount
              discounted is calculated)
            enum:
            - percent
            - fixed
            - free_trial
          discount_percent:
            type: integer
            title: Discount percent
            description: The percent of the price discounted by the coupon.  Required
              if `discount_type` is `percent`.
          free_trial_unit:
            type: string
            title: Free trial unit
            description: Description of the unit of time the coupon is for. Used with
              `free_trial_amount` to determine the duration of time the coupon is
              for.  Required if `discount_type` is `free_trial`.
            enum:
            - day
            - week
            - month
          free_trial_amount:
            type: integer
            title: Free trial amount
            description: Sets the duration of time the `free_trial_unit` is for. Required
              if `discount_type` is `free_trial`.
            minimum: 1
            maximum: 9999
          currencies:
            title: Currencies
            description: Fixed discount currencies by currency. Required if the coupon
              type is `fixed`. This parameter should contain the coupon discount values
            type: array
            items:
              "$ref": "#/components/schemas/CouponPricing"
          applies_to_non_plan_charges:
            type: boolean
            title: Applied to all non-plan charges?
            description: The coupon is valid for one-time, non-plan charges if true.
            default: false
          applies_to_all_plans:
            type: boolean
            title: Applies to all plans?
            description: The coupon is valid for all plans if true. If false then
              `plans` and `plans_names` will list the applicable plans.
            default: true
          plan_codes:
            type: array
            title: Plan codes
            description: List of plan codes to which this coupon applies. See `applies_to_all_plans`
            items:
              type: string
          duration:
            type: string
            title: Duration
            description: |
              This field does not apply when the discount_type is `free_trial`.
              - "single_use" coupons applies to the first invoice only.
              - "temporal" coupons will apply to invoices for the duration determined by the `temporal_unit` and `temporal_amount` attributes.
              - "forever" coupons will apply to invoices forever.
            enum:
            - forever
            - single_use
            - temporal
            default: forever
          temporal_amount:
            type: integer
            title: Temporal amount
            description: If `duration` is "temporal" than `temporal_amount` is an
              integer which is multiplied by `temporal_unit` to define the duration
              that the coupon will be applied to invoices for.
          temporal_unit:
            type: string
            title: Temporal unit
            description: If `duration` is "temporal" than `temporal_unit` is multiplied
              by `temporal_amount` to define the duration that the coupon will be
              applied to invoices for.
            enum:
            - day
            - week
            - month
            - year
          coupon_type:
            type: string
            title: Coupon type
            description: Whether the coupon is "single_code" or "bulk". Bulk coupons
              will require a `unique_code_template` and will generate unique codes
              through the `/generate` endpoint.
            enum:
            - single_code
            - bulk
          unique_code_template:
            type: string
            title: Unique code template
            description: |
              On a bulk coupon, the template from which unique coupon codes are generated.
              - You must start the template with your coupon_code wrapped in single quotes.
              - Outside of single quotes, use a 9 for a character that you want to be a random number.
              - Outside of single quotes, use an "x" for a character that you want to be a random letter.
              - Outside of single quotes, use an * for a character that you want to be a random number or letter.
              - Use single quotes ' ' for characters that you want to remain static. These strings can be alphanumeric and may contain a - _ or +.
              For example: "'abc-'****'-def'"
          redemption_resource:
            type: string
            title: Redemption resource
            description: Whether the discount is for all eligible charges on the account,
              or only a specific subscription.
            enum:
            - account
            - subscription
            default: account
        required:
        - code
        - discount_type
        - name
    CouponPricing:
      type: object
      properties:
        currency:
          type: string
          description: 3-letter ISO 4217 currency code.
        discount:
          type: number
          format: float
          description: The fixed discount (in dollars) for the corresponding currency.
    CouponDiscount:
      type: object
      description: 'Details of the discount a coupon applies. Will contain a `type`
        property and one of the following properties: `percent`, `fixed`, `free-trial`'
      properties:
        type:
          type: string
          enum:
          - percent
          - fixed
          - free_trial
        percent:
          type: integer
        currencies:
          type: array
          items:
            "$ref": "#/components/schemas/CouponDiscountPricing"
        trial:
          type: object
          x-class-name: CouponDiscountTrial
          properties:
            unit:
              type: string
              title: Trial unit
              description: Temporal unit of the free trial
              enum:
              - day
              - week
              - month
            length:
              type: integer
              title: Trial length
              description: Trial length measured in the units specified by the sibling
                `unit` property
    CouponDiscountPricing:
      type: object
      properties:
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        amount:
          type: number
          format: float
          title: Discount Amount
          description: Value of the fixed discount that this coupon applies.
    CouponBulkCreate:
      type: object
      properties:
        number_of_unique_codes:
          type: integer
          title: Number of unique codes
          description: The quantity of unique coupon codes to generate
          minimum: 1
          maximum: 200
    CouponMini:
      type: object
      properties:
        id:
          type: string
          title: Coupon ID
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        code:
          type: string
          title: Coupon code
          description: The code the customer enters to redeem the coupon.
        name:
          type: string
          title: Name
          description: The internal name for the coupon.
        state:
          type: string
          title: State
          description: Indicates if the coupon is redeemable, and if it is not, why.
          enum:
          - redeemable
          - maxed_out
          - expired
        discount:
          "$ref": "#/components/schemas/CouponDiscount"
        coupon_type:
          type: string
          title: 'Coupon type (TODO: implement coupon generation)'
          description: Whether the coupon is "single_code" or "bulk". Bulk coupons
            will require a `unique_code_template` and will generate unique codes through
            the `/generate` endpoint.
          enum:
          - single_code
          - bulk
        expired_at:
          type: string
          title: Expired at
          description: The date and time the coupon was expired early or reached its
            `max_redemptions`.
          format: date-time
    CouponRedemption:
      type: object
      properties:
        id:
          type: string
          title: Coupon Redemption ID
          readOnly: true
        object:
          type: string
          title: Object type
          description: Will always be `coupon`.
          readOnly: true
        account:
          type: object
          title: Account
          description: The Account on which the coupon was applied.
          readOnly: true
          "$ref": "#/components/schemas/AccountMini"
        coupon:
          "$ref": "#/components/schemas/Coupon"
        state:
          type: string
          title: Coupon Redemption state
          enum:
          - active
          - inactive
          default: active
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        discounted:
          type: number
          format: float
          title: Amount Discounted
          description: The amount that was discounted upon the application of the
            coupon, formatted with the currency.
        created_at:
          type: string
          title: Created at
          format: date-time
          readOnly: true
        updated_at:
          type: string
          title: Last updated at
          format: date-time
          readOnly: true
        removed_at:
          type: string
          title: Removed at
          description: The date and time the redemption was removed from the account
            (un-redeemed).
          format: date-time
    CouponRedemptionCreate:
      type: object
      properties:
        coupon_id:
          type: string
          title: Coupon ID
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
      required:
      - coupon_id
    CouponRedemptionMini:
      type: object
      properties:
        id:
          type: string
          title: Coupon Redemption ID
          readOnly: true
        object:
          type: string
          title: Object type
          description: Will always be `coupon`.
          readOnly: true
        coupon:
          "$ref": "#/components/schemas/CouponMini"
        state:
          type: string
          title: Invoice state
          enum:
          - active
          - inactive
        discounted:
          type: number
          format: float
          title: Amount Discounted
          description: The amount that was discounted upon the application of the
            coupon, formatted with the currency.
        created_at:
          type: string
          title: Created at
          format: date-time
          readOnly: true
    CouponUpdate:
      type: object
      properties:
        name:
          type: string
          title: Name
          description: The internal name for the coupon.
        max_redemptions:
          type: integer
          title: Max redemptions
          description: A maximum number of redemptions for the coupon. The coupon
            will expire when it hits its maximum redemptions.
        max_redemptions_per_account:
          type: integer
          title: Max redemptions per account
          description: Redemptions per account is the number of times a specific account
            can redeem the coupon. Set redemptions per account to `1` if you want
            to keep customers from gaming the system and getting more than one discount
            from the coupon campaign.
        hosted_description:
          type: string
          title: Hosted Payment Pages description
          description: This description will show up when a customer redeems a coupon
            on your Hosted Payment Pages, or if you choose to show the description
            on your own checkout page.
        invoice_description:
          type: string
          title: Invoice description
          description: Description of the coupon on the invoice.
          maxLength: 255
        redeem_by_date:
          type: string
          title: Redeem by
          description: The date and time the coupon will expire and can no longer
            be redeemed. Time is always 11:59:59, the end-of-day Pacific time.
    CreditPayment:
      type: object
      properties:
        id:
          type: string
          title: Credit Payment ID
          maxLength: 13
        object:
          type: string
          title: Object type
        uuid:
          type: string
          title: Recurly UUID
          description: The UUID is useful for matching data with the CSV exports and
            building URLs into Recurly's UI.
          maxLength: 32
        action:
          type: string
          title: Action
          description: The action for which the credit was created.
          enum:
          - payment
          - refund
          - reduction
          - write_off
        account:
          "$ref": "#/components/schemas/AccountMini"
        applied_to_invoice:
          "$ref": "#/components/schemas/InvoiceMini"
        original_invoice:
          "$ref": "#/components/schemas/InvoiceMini"
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        amount:
          type: number
          format: float
          title: Amount
          description: Total credit payment amount applied to the charge invoice.
        created_at:
          type: string
          title: Created at
          format: date-time
          readOnly: true
        updated_at:
          type: string
          title: Last updated at
          format: date-time
          readOnly: true
        voided_at:
          type: string
          title: Voided at
          format: date-time
          readOnly: true
    Invoice:
      type: object
      properties:
        id:
          type: string
          title: Invoice ID
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        type:
          type: string
          title: Invoice type
          description: The original invoice will have a type of `purchase`. Any refunds
            or voids will create a negative invoice to cancel out the original. `line_item_refund`
            indicates that specific line items were refunded, while `open_amount_refund`
            only indicates money was refunded.
          enum:
          - purchase
          - line_item_refund
          - open_amount_refund
        state:
          type: string
          title: Invoice state
          enum:
          - pending
          - processing
          - past_due
          - paid
          - failed
        account:
          "$ref": "#/components/schemas/AccountMini"
        subscription_id:
          type: string
          title: Subscription ID
          description: If the invoice is charging or refunding for a subscription,
            this is its ID.
          maxLength: 13
        previous_invoice_id:
          type: string
          title: Previous invoice ID
          description: On refund invoices, this value will exist and show the invoice
            ID of the purchase invoice the refund was created from.
          maxLength: 13
        number:
          type: string
          title: Invoice number
          description: 'If VAT taxation and the Country Invoice Sequencing feature
            are enabled, invoices will have country-specific invoice numbers for invoices
            billed to EU countries (ex: FR1001). Non-EU invoices will continue to
            use the site-level invoice number sequence.'
        collection_method:
          type: string
          title: Collection method
          description: An automatic invoice means a corresponding transaction is run
            using the account's billing information at the same time the invoice is
            created. Manual invoices are created without a corresponding transaction.
            The merchant must enter a manual payment transaction or have the customer
            pay the invoice with an automatic method, like credit card, PayPal, Amazon,
            or ACH bank payment.
          enum:
          - automatic
          - manual
          default: automatic
        po_number:
          type: string
          title: Purchase order number
          description: For manual invoicing, this identifies the PO number associated
            with the subscription.
          maxLength: 50
        net_terms:
          type: integer
          title: Net terms
          description: |
            Integer representing the number of days after an invoice's creation
            that the invoice will become past due. If an invoice's net terms are set
            to '0', it is due 'On Receipt' and will become past due 24 hours after it’s
            created. If an invoice is due net 30, it will become past due at 31 days
            exactly.
          minimum: 0
          default: 0
        address:
          "$ref": "#/components/schemas/Address"
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        discount:
          type: number
          format: float
          title: Discount
          description: Total discounts applied to this invoice.
        subtotal:
          type: number
          format: float
          title: Subtotal
          description: The summation of charges, discounts, and credits, before tax.
        tax:
          type: number
          format: float
          title: Tax
          description: The total tax on this invoice.
        total:
          type: number
          format: float
          title: Total
          description: The final total on this invoice. The summation of invoice charges,
            discounts, credits, and tax.
        paid:
          type: number
          format: float
          title: Paid
          description: The total amount of successful payments transaction on this
            invoice.
        due:
          type: number
          format: float
          title: Due
          description: The outstanding balance remaining on this invoice.
        tax_info:
          "$ref": "#/components/schemas/TaxInfo"
        vat_number:
          type: string
          title: VAT number
          description: VAT registration number for the customer on this invoice. This
            will come from the VAT Number field in the Billing Info or the Account
            Info depending on your tax settings and the invoice collection method.
          maxLength: 20
        vat_reverse_charge_notes:
          type: string
          title: VAT reverse charge notes
          description: VAT Reverse Charge Notes only appear if you have EU VAT enabled
            or are using your own Avalara AvaTax account and the customer is in the
            EU, has a VAT number, and is in a different country than your own. This
            will default to the VAT Reverse Charge Notes text specified on the Tax
            Settings page in your Recurly admin, unless custom notes were created
            with the original subscription.
        terms_and_conditions:
          type: string
          title: Terms and conditions
          description: This will default to the Terms and Conditions text specified
            on the Invoice Settings page in your Recurly admin. Specify custom notes
            to add or override Terms and Conditions.
        customer_notes:
          type: string
          title: Customer notes
          description: This will default to the Customer Notes text specified on the
            Invoice Settings. Specify custom notes to add or override Customer Notes.
        line_items:
          type: object
          x-class-name: InvoiceLineItems
          title: Line items
          description: Line items are grouped by the role they play.
          properties:
            credits:
              type: array
              title: Credits
              description: Refund or proration credits. This portion of the invoice
                can be considered a credit memo.
              items:
                "$ref": "#/components/schemas/LineItem"
            charges:
              type: array
              title: Charges
              description: New charges being billed for on this invoice.
              items:
                "$ref": "#/components/schemas/LineItem"
            applied_credits:
              type: array
              title: Applied credits
              description: Previous credits applied to this invoice. See their `original_line_item_id`
                to determine where the credit first originated.
              items:
                "$ref": "#/components/schemas/LineItem"
            carryforwards:
              type: array
              title: Carryforward credits
              description: These charges can be ignored. They exist to consume any
                remaining credit balance. A new credit with the same amount will be
                created and placed back on the account.
              items:
                "$ref": "#/components/schemas/LineItem"
        transactions:
          type: array
          title: Transactions
          items:
            "$ref": "#/components/schemas/Transaction"
        created_at:
          type: string
          format: date-time
          title: Created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: Last updated at
          readOnly: true
        due_at:
          type: string
          format: date-time
          title: Due at
          description: Date invoice is due. This is the date the net terms are reached.
        closed_at:
          type: string
          format: date-time
          title: Closed at
          description: Date invoice was marked paid or failed.
    InvoiceCreate:
      type: object
      properties:
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        collection_method:
          type: string
          title: Collection method
          description: An automatic invoice means a corresponding transaction is run
            using the account's billing information at the same time the invoice is
            created. Manual invoices are created without a corresponding transaction.
            The merchant must enter a manual payment transaction or have the customer
            pay the invoice with an automatic method, like credit card, PayPal, Amazon,
            or ACH bank payment.
          enum:
          - automatic
          - manual
          default: automatic
        customer_notes:
          type: string
          title: Customer notes
          description: This will default to the Customer Notes text specified on the
            Invoice Settings. Specify custom notes to add or override Customer Notes.
        net_terms:
          type: integer
          title: Net terms
          description: Integer representing the number of days after an invoice's
            creation that the invoice will become past due. If an invoice's net terms
            are set to '0', it is due 'On Receipt' and will become past due 24 hours
            after it’s created. If an invoice is due net 30, it will become past due
            at 31 days exactly.
          minimum: 0
          default: 0
        po_number:
          type: string
          title: Purchase order number
          description: For manual invoicing, this identifies the PO number associated
            with the subscription.
          maxLength: 50
        terms_and_conditions:
          type: string
          title: Terms and conditions
          description: This will default to the Terms and Conditions text specified
            on the Invoice Settings page in your Recurly admin. Specify custom notes
            to add or override Terms and Conditions.
        vat_reverse_charge_notes:
          type: string
          title: VAT reverse charge notes
          description: VAT Reverse Charge Notes only appear if you have EU VAT enabled
            or are using your own Avalara AvaTax account and the customer is in the
            EU, has a VAT number, and is in a different country than your own. This
            will default to the VAT Reverse Charge Notes text specified on the Tax
            Settings page in your Recurly admin, unless custom notes were created
            with the original subscription.
      required:
      - currency
    InvoiceMini:
      type: object
      title: Invoice mini details
      properties:
        object:
          type: string
          title: Object type
        number:
          type: string
          title: Invoice number
        state:
          type: string
          title: Invoice state
          enum:
          - pending
          - processing
          - past_due
          - paid
          - failed
    LineItem:
      type: object
      title: Line item
      properties:
        id:
          type: string
          title: Line item ID
          maxLength: 13
        object:
          type: string
          title: Object type
        uuid:
          type: string
          title: UUID
          description: The UUID is useful for matching data with the CSV exports and
            building URLs into Recurly's UI.
          maxLength: 32
        type:
          type: string
          title: Line item type
          description: Charges are positive line items that debit the account. Credits
            are negative line items that credit the account.
          enum:
          - charge
          - credit
        state:
          type: string
          title: Current state of the line item
          description: Pending line items are charges or credits on an account that
            have not been applied to an invoice yet. Invoiced line items will always
            have an `invoice_id` value.
          enum:
          - pending
          - invoiced
        account:
          "$ref": "#/components/schemas/AccountMini"
        subscription_id:
          type: string
          title: Subscription ID
          description: If the line item is a charge or credit for a subscription,
            this is its ID.
          maxLength: 13
        plan_id:
          type: string
          title: Plan ID
          description: If the line item is a charge or credit for a plan or add-on,
            this is the plan's ID.
          maxLength: 13
        plan_code:
          type: string
          title: Plan code
          description: If the line item is a charge or credit for a plan or add-on,
            this is the plan's code.
          maxLength: 50
        add_on_id:
          type: string
          title: Add-on ID
          description: If the line item is a charge or credit for an add-on this is
            its ID.
          maxLength: 13
        add_on_code:
          type: string
          title: Add-on code
          description: If the line item is a charge or credit for an add-on, this
            is its code.
          maxLength: 50
        invoice_id:
          type: string
          title: Invoice ID
          description: Once the line item has been invoiced this will be the invoice's
            ID.
          maxLength: 13
        invoice_number:
          type: string
          title: Invoice number
          description: 'Once the line item has been invoiced this will be the invoice''s
            number. If VAT taxation and the Country Invoice Sequencing feature are
            enabled, invoices will have country-specific invoice numbers for invoices
            billed to EU countries (ex: FR1001). Non-EU invoices will continue to
            use the site-level invoice number sequence.'
        previous_line_item_id:
          type: string
          title: Previous line item ID
          description: Will only have a value if the line item is a credit created
            from a previous credit, or if the credit was created from a charge refund.
          maxLength: 13
        original_line_item_id:
          type: string
          title: Original line item ID
          description: The line item where the credit originated. Will only have a
            value if the line item is a credit created from a previous credit, or
            if the credit was created from a charge refund. For some older invoices
            this may reference a carryforward charge.
          maxLength: 13
        original_line_item_invoice_id:
          type: string
          title: Original line item's invoice ID
          description: The invoice where the credit originated. Will only have a value
            if the line item is a credit created from a previous credit, or if the
            credit was created from a charge refund.
          maxLength: 13
        origin:
          type: string
          title: Origin of line item
          description: A credit created from an original charge will have the value
            of the charge's origin.
          enum:
          - plan
          - plan_trial
          - setup_fee
          - add_on_trial
          - add_on
          - debit
          - one_time
          - credit
          - coupon
          - carryforward
        accounting_code:
          type: string
          title: Accounting code
          description: Internal accounting code to help you reconcile your revenue
            to the correct ledger. Line items created as part of a subscription invoice
            will use the plan or add-on's accounting code, otherwise the value will
            only be present if you define an accounting code when creating the line
            item.
          maxLength: 20
        product_code:
          type: string
          title: Product code
          description: For plan related line items this will be the plan's code, for
            add-on related line items it will be the add-on's code.
          maxLength: 50
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        amount:
          type: number
          format: float
          title: Total after discounts and taxes
          description: "`(quantity * unit_amount) - (discount + tax)`"
        description:
          type: string
          title: Description
          description: Description that appears on the invoice. For subscription related
            items this will be filled in automatically.
          maxLength: 255
        quantity:
          type: integer
          title: Quantity
          description: This number will be multiplied by the unit amount to compute
            the subtotal before any discounts or taxes.
          default: 1
        unit_amount:
          type: number
          format: float
          title: Unit amount
          description: Positive amount for a charge, negative amount for a credit.
        subtotal:
          type: number
          format: float
          title: Total before discounts and taxes
          description: "`quantity * unit_amount`"
        discount:
          type: number
          format: float
          title: Discount
          description: The discount applied to the line item.
        tax:
          type: number
          format: float
          title: Tax
          description: The tax amount for the line item.
        taxable:
          type: boolean
          title: Taxable?
          description: "`true` if the line item is taxable, `false` if it is not."
        tax_exempt:
          type: boolean
          title: Tax exempt?
          description: "`true` exempts tax on charges, `false` applies tax on charges.
            If not defined, then defaults to the Plan and Site settings. This attribute
            does not work for credits (negative line items). Credits are always applied
            post-tax. Pre-tax discounts should use the Coupons feature."
        tax_code:
          type: string
          title: Tax code
          description: Used by Avalara, Vertex, and Recurly’s EU VAT tax feature.
            The tax code values are specific to each tax system. If you are using
            Recurly’s EU VAT feature `P0000000` is `physical`, `D0000000` is `digital`,
            and an empty string is `unknown`.
          maxLength: 50
        refund:
          type: boolean
          title: Refund?
        refunded_quantity:
          type: integer
          title: Refunded Quantity
          description: For refund charges, the quantity being refunded. For non-refund
            charges, the total quantity refunded (possibly over multiple refunds).
        credit_applied:
          type: number
          format: float
          title: Credit Applied
          description: The amount of credit from this line item that was applied to
            the invoice.
        shipping_address:
          "$ref": "#/components/schemas/ShippingAddress"
        start_date:
          type: string
          format: date-time
          title: Start date
          description: If an end date is present, this is value indicates the beginning
            of a billing time range. If no end date is present it indicates billing
            for a specific date.
        end_date:
          type: string
          format: date-time
          title: End date
          description: If this date is provided, it indicates the end of a time range.
        created_at:
          type: string
          format: date-time
          title: Created at
          description: When the line item was created.
        updated_at:
          type: string
          format: date-time
          title: Last updated at
          description: When the line item was last changed.
    LineItemCreate:
      type: object
      properties:
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        unit_amount:
          type: number
          format: float
          title: Unit amount
          description: |
            A positive or negative amount with `type=charge` will result in a positive `unit_amount`.
            A positive or negative amount with `type=credit` will result in a negative `unit_amount`.
        quantity:
          type: integer
          title: Quantity
          description: This number will be multiplied by the unit amount to compute
            the subtotal before any discounts or taxes.
          default: 1
        description:
          type: string
          title: Description
          description: Description that appears on the invoice.
          maxLength: 255
        type:
          type: string
          title: Type
          description: Line item type.
          enum:
          - charge
          - credit
        tax_exempt:
          type: boolean
          title: Tax exempt?
          description: "`true` exempts tax on charges, `false` applies tax on charges.
            If not defined, then defaults to the Plan and Site settings. This attribute
            does not work for credits (negative line items). Credits are always applied
            post-tax. Pre-tax discounts should use the Coupons feature."
        tax_code:
          type: string
          title: Tax code
          description: Optional field used by Avalara, Vertex, and Recurly's EU VAT
            tax feature to determine taxation rules. If you have your own AvaTax or
            Vertex account configured, use their tax codes to assign specific tax
            rules. If you are using Recurly's EU VAT feature, you can use values of
            `unknown`, `physical`, or `digital`.
          maxLength: 50
        start_date:
          type: string
          format: date-time
          title: Start date
          description: If an end date is present, this is value indicates the beginning
            of a billing time range. If no end date is present it indicates billing
            for a specific date. Defaults to the current date-time.
        end_date:
          type: string
          format: date-time
          title: End date
          description: If this date is provided, it indicates the end of a time range.
      required:
      - currency
      - unit_amount
    PlanMini:
      type: object
      title: Plan mini details
      description: Just the important parts.
      properties:
        id:
          type: string
          title: Plan ID
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        code:
          type: string
          title: Plan code
          description: Unique code to identify the plan. This is used in Hosted Payment
            Page URLs and in the invoice exports.
          pattern: "/^[a-z0-9_+-]+$/i"
          maxLength: 50
        name:
          type: string
          title: Name
          description: This name describes your plan and will appear on the Hosted
            Payment Page and the subscriber's invoice.
          maxLength: 255
    Plan:
      type: object
      description: Full plan details.
      properties:
        id:
          type: string
          title: Plan ID
          maxLength: 13
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        code:
          type: string
          title: Plan code
          description: Unique code to identify the plan. This is used in Hosted Payment
            Page URLs and in the invoice exports.
          pattern: "/^[a-z0-9_+-]+$/i"
          maxLength: 50
        state:
          type: string
          title: State
          description: Plans can be either active or inactive.
          readOnly: true
          enum:
          - active
          - inactive
        name:
          type: string
          title: Name
          description: This name describes your plan and will appear on the Hosted
            Payment Page and the subscriber's invoice.
          maxLength: 255
        description:
          type: string
          title: Description
          description: Optional description, not displayed.
        interval_unit:
          type: string
          title: Interval unit
          description: Unit for the plan's billing interval.
          enum:
          - days
          - months
          default: months
        interval_length:
          type: integer
          title: Interval length
          description: Length of the plan's billing interval in `interval_unit`.
          default: 1
          minimum: 1
        trial_unit:
          type: string
          title: Trial unit
          description: Units for the plan's trial period.
          enum:
          - days
          - months
          default: months
        trial_length:
          type: integer
          title: Trial length
          description: Length of plan's trial period in `trial_units`. `0` means `no
            trial`.
          default: 0
          minimum: 0
        total_billing_cycles:
          type: integer
          title: Total billing cycles
          description: Automatically terminate subscriptions after a defined number
            of billing cycles. Number of billing cycles before the plan automatically
            stops renewing, defaults to `null` for continuous, automatic renewal.
          minimum: 0
        accounting_code:
          type: string
          title: Plan accounting code
          description: Accounting code for invoice line items for the plan. If no
            value is provided, it defaults to plan's code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        setup_fee_accounting_code:
          type: string
          title: Setup fee accounting code
          description: Accounting code for invoice line items for the plan's setup
            fee. If no value is provided, it defaults to plan's accounting code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        tax_code:
          type: string
          title: Tax code
          description: Used by Avalara, Vertex, and Recurly’s EU VAT tax feature.
            The tax code values are specific to each tax system. If you are using
            Recurly’s EU VAT feature `P0000000` is `physical`, `D0000000` is `digital`,
            and an empty string is `unknown`.
          maxLength: 50
        tax_exempt:
          type: boolean
          title: Tax exempt?
          description: "`true` exempts tax on the plan, `false` applies tax on the
            plan."
        currencies:
          type: array
          title: Pricing
          items:
            type: object
            properties:
              currency:
                type: string
                title: Currency
                description: 3-letter ISO 4217 currency code.
                maxLength: 3
              setup_fee:
                type: number
                format: float
                title: Setup fee
                description: Amount of one-time setup fee automatically charged at
                  the beginning of a subscription billing cycle. For subscription
                  plans with a trial, the setup fee will be charged at the time of
                  signup. Setup fees do not increase with the quantity of a subscription
                  plan.
                minimum: 0
                maximum: 100000
              unit_amount:
                type: number
                format: float
                title: Unit price
                minimum: 0
                maximum: 100000
          minItems: 1
        hosted_pages:
          type: object
          title: Hosted pages settings
          "$ref": "#/components/schemas/PlanHostedPages"
        created_at:
          type: string
          format: date-time
          title: Created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: Last updated at
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          title: Deleted at
          readOnly: true
      required:
      - code
      - name
    PlanCreate:
      type: object
      properties:
        code:
          type: string
          title: Plan code
          description: Unique code to identify the plan. This is used in Hosted Payment
            Page URLs and in the invoice exports.
          pattern: "/^[a-z0-9_+-]+$/i"
          maxLength: 50
        name:
          type: string
          title: Name
          description: This name describes your plan and will appear on the Hosted
            Payment Page and the subscriber's invoice.
          maxLength: 255
        description:
          type: string
          title: Description
          description: Optional description, not displayed.
        accounting_code:
          type: string
          title: Plan accounting code
          description: Accounting code for invoice line items for the plan. If no
            value is provided, it defaults to plan's code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        interval_unit:
          type: string
          title: Interval unit
          description: Unit for the plan's billing interval.
          enum:
          - days
          - months
          default: months
        interval_length:
          type: integer
          title: Interval length
          description: Length of the plan's billing interval in `interval_unit`.
          default: 1
          minimum: 1
        trial_unit:
          type: string
          title: Trial unit
          description: Units for the plan's trial period.
          enum:
          - days
          - months
          default: months
        trial_length:
          type: integer
          title: Trial length
          description: Length of plan's trial period in `trial_units`. `0` means `no
            trial`.
          default: 0
          minimum: 0
        total_billing_cycles:
          type: integer
          title: Total billing cycles
          description: Automatically terminate plans after a defined number of billing
            cycles.
          minimum: 0
        setup_fee_accounting_code:
          type: string
          title: Setup fee accounting code
          description: Accounting code for invoice line items for the plan's setup
            fee. If no value is provided, it defaults to plan's accounting code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        tax_code:
          type: string
          title: Tax code
          description: Optional field used by Avalara, Vertex, and Recurly's EU VAT
            tax feature to determine taxation rules. If you have your own AvaTax or
            Vertex account configured, use their tax codes to assign specific tax
            rules. If you are using Recurly's EU VAT feature, you can use values of
            `unknown`, `physical`, or `digital`.
          maxLength: 50
        tax_exempt:
          type: boolean
          title: Tax exempt?
          description: "`true` exempts tax on the plan, `false` applies tax on the
            plan."
        currencies:
          type: array
          title: Pricing
          items:
            type: object
            properties:
              currency:
                type: string
                title: Currency
                description: 3-letter ISO 4217 currency code.
                maxLength: 3
              setup_fee:
                type: number
                format: float
                title: Setup fee
                description: Amount of one-time setup fee automatically charged at
                  the beginning of a subscription billing cycle. For subscription
                  plans with a trial, the setup fee will be charged at the time of
                  signup. Setup fees do not increase with the quantity of a subscription
                  plan.
                minimum: 0
                maximum: 100000
              unit_amount:
                type: number
                format: float
                title: Unit price
                minimum: 0
                maximum: 100000
          minItems: 1
        hosted_pages:
          type: object
          title: Hosted pages settings
          "$ref": "#/components/schemas/PlanHostedPages"
        add_ons:
          type: array
          title: Add Ons
          items:
            "$ref": "#/components/schemas/AddOnCreate"
      required:
      - code
      - name
      - currencies
    PlanHostedPages:
      type: object
      properties:
        success_url:
          type: string
          title: Success redirect URL
          description: URL to redirect to after signup on the hosted payment pages.
        cancel_url:
          type: string
          title: Cancel redirect URL (deprecated)
          description: URL to redirect to on canceled signup on the hosted payment
            pages.
        bypass_confirmation:
          type: boolean
          title: Bypass confirmation page?
          description: If `true`, the customer will be sent directly to your `success_url`
            after a successful signup, bypassing Recurly's hosted confirmation page.
        display_quantity:
          type: boolean
          title: Display quantity?
          description: Determines if the quantity field is displayed on the hosted
            pages for the plan.
    PlanPricing:
      type: object
      properties:
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        setup_fee:
          type: number
          format: float
          title: Setup fee
          description: Amount of one-time setup fee automatically charged at the beginning
            of a subscription billing cycle. For subscription plans with a trial,
            the setup fee will be charged at the time of signup. Setup fees do not
            increase with the quantity of a subscription plan.
          minimum: 0
          maximum: 100000
        unit_amount:
          type: number
          format: float
          title: Unit price
          minimum: 0
          maximum: 100000
    PlanUpdate:
      type: object
      properties:
        id:
          type: string
          title: Plan ID
          maxLength: 13
          readOnly: true
        code:
          type: string
          title: Plan code
          description: Unique code to identify the plan. This is used in Hosted Payment
            Page URLs and in the invoice exports.
          pattern: "/^[a-z0-9_+-]+$/i"
          maxLength: 50
        name:
          type: string
          title: Name
          description: This name describes your plan and will appear on the Hosted
            Payment Page and the subscriber's invoice.
          maxLength: 255
        description:
          type: string
          title: Description
          description: Optional description, not displayed.
        accounting_code:
          type: string
          title: Plan accounting code
          description: Accounting code for invoice line items for the plan. If no
            value is provided, it defaults to plan's code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        interval_unit:
          type: string
          title: Interval unit
          description: Unit for the plan's billing interval.
          enum:
          - days
          - months
          default: months
        interval_length:
          type: integer
          title: Interval length
          description: Length of the plan's billing interval in `interval_unit`.
          default: 1
          minimum: 1
        trial_unit:
          type: string
          title: Trial unit
          description: Units for the plan's trial period.
          enum:
          - days
          - months
          default: months
        trial_length:
          type: integer
          title: Trial length
          description: Length of plan's trial period in `trial_units`. `0` means `no
            trial`.
          default: 0
          minimum: 0
        total_billing_cycles:
          type: integer
          title: Total billing cycles
          description: Automatically terminate plans after a defined number of billing
            cycles.
          minimum: 0
        setup_fee_accounting_code:
          type: string
          title: Setup fee accounting code
          description: Accounting code for invoice line items for the plan's setup
            fee. If no value is provided, it defaults to plan's accounting code.
          pattern: "/^[a-z0-9_+-]+$/"
          maxLength: 20
        tax_code:
          type: string
          title: Tax code
          description: Optional field used by Avalara, Vertex, and Recurly's EU VAT
            tax feature to determine taxation rules. If you have your own AvaTax or
            Vertex account configured, use their tax codes to assign specific tax
            rules. If you are using Recurly's EU VAT feature, you can use values of
            `unknown`, `physical`, or `digital`.
          maxLength: 50
        tax_exempt:
          type: boolean
          title: Tax exempt?
          description: "`true` exempts tax on the plan, `false` applies tax on the
            plan."
        currencies:
          type: array
          title: Pricing
          items:
            "$ref": "#/components/schemas/PlanPricing"
          minItems: 1
        hosted_pages:
          type: object
          title: Hosted pages settings
          "$ref": "#/components/schemas/PlanHostedPages"
        add_ons:
          type: array
          title: Add Ons
          items:
            "$ref": "#/components/schemas/AddOnCreate"
    Settings:
      type: object
      properties:
        billing_address_requirement:
          type: string
          description: |
            - full:      Full Address (Street, City, State, Postal Code and Country)
            - streetzip: Street and Postal Code only
            - zip:       Postal Code only
            - none:      No Address
          enum:
          - full
          - streetzip
          - zip
          - none
          readOnly: true
        accepted_currencies:
          type: array
          items:
            type: string
            description: 3-letter ISO 4217 currency code.
          readOnly: true
        default_currency:
          type: string
          description: The default 3-letter ISO 4217 currency code.
          readOnly: true
    ShippingAddress:
      type: object
      properties:
        id:
          type: string
          title: Shipping Address ID
          maxLength: 13
          readOnly: true
        account_id:
          type: string
          title: Account ID
          maxLength: 13
          readOnly: true
        nickname:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        vat_number:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 30
        street1:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        region:
          type: string
          maxLength: 255
          description: State or province.
        postal_code:
          type: string
          maxLength: 20
          description: Zip or postal code.
        country:
          type: string
          maxLength: 50
          description: Country, 2-letter ISO code.
        created_at:
          type: string
          title: Created at
          format: date-time
          readOnly: true
        updated_at:
          type: string
          title: Updated at
          format: date-time
          readOnly: true
    ShippingAddressCreate:
      type: object
      properties:
        nickname:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        vat_number:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 30
        street1:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        region:
          type: string
          maxLength: 255
          description: State or province.
        postal_code:
          type: string
          maxLength: 20
          description: Zip or postal code.
        country:
          type: string
          maxLength: 50
          description: Country, 2-letter ISO code.
      required:
      - first_name
      - last_name
      - street1
      - city
      - postal_code
      - country
    ShippingAddressList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/ShippingAddress"
    ShippingAddressUpdate:
      type: object
      properties:
        id:
          type: string
          title: Shipping Address ID
          maxLength: 13
          readOnly: true
        nickname:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        vat_number:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 30
        street1:
          type: string
          maxLength: 255
        street2:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        region:
          type: string
          maxLength: 255
          description: State or province.
        postal_code:
          type: string
          maxLength: 20
          description: Zip or postal code.
        country:
          type: string
          maxLength: 50
          description: Country, 2-letter ISO code.
    Site:
      type: object
      properties:
        id:
          type: string
          title: Site ID
          readOnly: true
          maxLength: 13
        object:
          type: string
          title: Object type
          readOnly: true
        subdomain:
          type: string
          readOnly: true
          maxLength: 100
        mode:
          type: string
          title: Mode
          enum:
          - development
          - production
          - sandbox
          maxLength: 15
          readOnly: true
        address:
          "$ref": "#/components/schemas/Address"
        settings:
          "$ref": "#/components/schemas/Settings"
        created_at:
          type: string
          format: date-time
          title: Created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: Updated at
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          title: Deleted at
          readOnly: true
    Subscription:
      type: object
      properties:
        id:
          type: string
          title: Subscription ID
          maxLength: 13
        object:
          type: string
          title: Object type
        uuid:
          type: string
          title: UUID
          description: The UUID is useful for matching data with the CSV exports and
            building URLs into Recurly's UI.
          maxLength: 32
        account:
          "$ref": "#/components/schemas/AccountMini"
        shipping_address:
          "$ref": "#/components/schemas/ShippingAddress"
        plan:
          "$ref": "#/components/schemas/PlanMini"
        state:
          type: string
          title: State
          enum:
          - active
          - canceled
          - expired
          - failed
          - future
        coupon_redemptions:
          type: array
          title: Coupon redemptions
          items:
            "$ref": "#/components/schemas/CouponRedemptionMini"
        pending_change:
          "$ref": "#/components/schemas/SubscriptionChange"
        current_period_started_at:
          type: string
          format: date-time
          title: Current billing period started at
        current_period_ends_at:
          type: string
          format: date-time
          title: Current billing period ends at
        trial_started_at:
          type: string
          format: date-time
          title: Trial period started at
        trial_ends_at:
          type: string
          format: date-time
          title: Trial period ends at
        remaining_billing_cycles:
          type: integer
          title: Remaining billing cycles
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        unit_amount:
          type: number
          format: float
          title: Subscription unit price
        quantity:
          type: integer
          title: Subscription quantity
          minimum: 0
        add_ons:
          type: array
          title: Add-ons
          items:
            "$ref": "#/components/schemas/SubscriptionAddOn"
        add_ons_total:
          type: number
          format: float
          title: Total price of add-ons
          minimum: 0
        subtotal:
          type: number
          format: float
          title: Estimated total, before tax.
          minimum: 0
        collection_method:
          type: string
          title: Collection method
          enum:
          - automatic
          - manual
          default: automatic
        po_number:
          type: string
          title: Purchase order number
          description: For manual invoicing, this identifies the PO number associated
            with the subscription.
          maxLength: 50
        net_terms:
          type: integer
          title: Net terms
          description: Integer representing the number of days after an invoice's
            creation that the invoice will become past due. If an invoice's net terms
            are set to '0', it is due 'On Receipt' and will become past due 24 hours
            after it’s created. If an invoice is due net 30, it will become past due
            at 31 days exactly.
          minimum: 0
          default: 0
        terms_and_conditions:
          type: string
          title: Terms and conditions
        customer_notes:
          type: string
          title: Customer notes
        expiration_reason:
          type: string
          title: Expiration reason
        created_at:
          type: string
          format: date-time
          title: Created at
        updated_at:
          type: string
          format: date-time
          title: Last updated at
        activated_at:
          type: string
          format: date-time
          title: Activated at
        canceled_at:
          type: string
          format: date-time
          title: Canceled at
        expires_at:
          type: string
          format: date-time
          title: Expires at
        bank_account_authorized_at:
          type: string
          format: date-time
          title: Bank account authorized
          description: Recurring subscriptions paid with ACH will have this attribute
            set. This timestamp is used for alerting customers to reauthorize in 3
            years in accordance with NACHA rules. If a subscription becomes inactive
            or the billing info is no longer a bank account, this timestamp is cleared.
    SubscriptionAddOn:
      type: object
      title: Subscription Add-on
      description: This links an Add-on to a specific Subscription.
      properties:
        id:
          type: string
          title: Subscription Add-on ID
          maxLength: 13
        object:
          type: string
          title: Object type
        subscription_id:
          type: string
          title: Subscription ID
          maxLength: 13
        add_on:
          "$ref": "#/components/schemas/AddOnMini"
        quantity:
          type: integer
          title: Add-on quantity
          minimum: 0
        unit_amount:
          type: number
          format: float
          title: Add-on unit price
          description: This is priced in the subscription's currency.
        created_at:
          type: string
          format: date-time
          title: Created at
        updated_at:
          type: string
          format: date-time
          title: Updated at
        expired_at:
          type: string
          format: date-time
          title: Expired at
    SubscriptionAddOnCreate:
      type: object
      properties:
        code:
          type: string
          title: Add-on code
          maxLength: 50
        quantity:
          type: integer
          title: Quantity
          minimum: 0
          default: 1
        unit_amount:
          type: number
          format: float
          title: Unit amount
          description: Optionally, override the add-on's default unit amount.
          minimum: 0
      required:
      - code
    SubscriptionChange:
      type: object
      title: Subscription Change
      properties:
        id:
          type: string
          title: Subscription Change ID
          description: The ID of the Subscription Change.
        object:
          type: string
          title: Object type
        subscription_id:
          type: string
          title: Subscription ID
          description: The ID of the subscription that is going to be changed.
          maxLength: 13
        plan:
          "$ref": "#/components/schemas/PlanMini"
        add_ons:
          type: array
          title: Add-ons
          description: These add-ons will be used when the subscription renews.
          items:
            "$ref": "#/components/schemas/SubscriptionAddOn"
        unit_amount:
          type: number
          format: float
          title: Unit amount
        quantity:
          type: integer
          title: Subscription quantity
        activate_at:
          type: string
          format: date-time
          title: Activated at
          readOnly: true
        activated:
          type: boolean
          title: Activated?
          description: Returns `true` if the subscription change is activated.
        created_at:
          type: string
          format: date-time
          title: Created at
          readOnly: true
        updated_at:
          type: string
          format: date-time
          title: Updated at
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          title: Deleted at
          readOnly: true
    SubscriptionChangeCreate:
      type: object
      properties:
        timeframe:
          type: string
          title: Timeframe
          description: The timeframe parameter controls when the upgrade or downgrade
            takes place. The subscription change can occur now or when the subscription
            renews. Generally, if you're performing an upgrade, you will want the
            change to occur immediately (now). If you're performing a downgrade, you
            should set the timeframe to "renewal" so the change takes affect at the
            end of the current billing cycle.
          default: now
          enum:
          - now
          - renewal
        plan_code:
          type: string
          title: Plan code
          description: The plan code.
          maxLength: 50
        unit_amount:
          type: number
          format: float
          title: Custom subscription price
          description: Optionally, sets custom pricing for the subscription, overriding
            the plan's default unit amount. The subscription's current currency will
            be used.
          minimum: 0
          maximum: 100000
        quantity:
          type: integer
          title: Quantity
          description: Optionally override the default quantity of 1.
          default: 1
          minimum: 0
        coupon_codes:
          type: array
          title: Coupon codes
          description: A list of coupon_codes to be redeemed on the subscription during
            the change. Only allowed if timeframe is now and you change something
            about the subscription that creates an invoice.
          items:
            type: string
        add_ons:
          type: array
          title: Add-ons
          description: If you set this value you include all the add-ons and their
            quantities and amounts. The values you include will replace the previous
            values entirely.
          items:
            "$ref": "#/components/schemas/SubscriptionAddOnCreate"
        collection_method:
          type: string
          title: Collection method
          enum:
          - automatic
          - manual
          default: automatic
        po_number:
          type: string
          title: Purchase order number
          description: For manual invoicing, this identifies the PO number associated
            with the subscription.
          maxLength: 50
        net_terms:
          type: integer
          title: Net terms
          description: Integer representing the number of days after an invoice's
            creation that the invoice will become past due. If an invoice's net terms
            are set to '0', it is due 'On Receipt' and will become past due 24 hours
            after it’s created. If an invoice is due net 30, it will become past due
            at 31 days exactly.
          minimum: 0
          default: 0
    SubscriptionCreate:
      type: object
      properties:
        plan_code:
          type: string
          title: Plan code
        plan_id:
          type: string
          title: Plan ID
          maxLength: 13
        account:
          "$ref": "#/components/schemas/AccountCreate"
        shipping_address:
          title: Shipping address
          description: Create a shipping address on the account and assign it to the
            subscription.
          "$ref": "#/components/schemas/ShippingAddressCreate"
        shipping_address_id:
          type: string
          title: Shipping address ID
          description: Assign a shipping address from the account's existing shipping
            addresses. If this and `shipping_address` are both present, `shipping_address`
            will take precedence.
          maxLength: 13
        collection_method:
          type: string
          title: Collection method
          enum:
          - automatic
          - manual
          default: automatic
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        unit_amount:
          type: number
          format: float
          title: Custom subscription pricing
          description: Override the unit amount of the subscription plan by setting
            this value. If not provided, the subscription will inherit the price from
            the subscription plan for the provided currency.
          minimum: 0
          maximum: 100000
        quantity:
          type: integer
          title: Quantity
          description: Optionally override the default quantity of 1.
          default: 1
          minimum: 0
        add_ons:
          type: array
          title: Add-ons
          items:
            "$ref": "#/components/schemas/SubscriptionAddOnCreate"
        coupon_code:
          type: string
          title: Redeem a coupon and discount the subscription
          description: Optional coupon code to redeem on the account and discount
            the subscription. Please note, the subscription request will fail if the
            coupon is invalid.
        trial_ends_at:
          type: string
          format: date-time
          title: Trial ends at
          description: If set, overrides the default trial behavior for the subscription.
            The date must be in the future.
        starts_at:
          type: string
          format: date-time
          title: Start date
          description: If set, the subscription will begin in the future on this date.
            The subscription will apply the setup fee and trial period, unless the
            plan has no trial.
        first_renewal_date:
          type: string
          format: date-time
          title: First renewal date
          description: If set,indicates when the first renewal should occur. Subsequent
            renewals will be offset from this date. The first invoice will be prorated
            appropriately so that the customer only pays for the portion of the first
            billing period for which the subscription applies. Useful for forcing
            a subscription to renew on the first of the month.
        total_billing_cycles:
          type: integer
          title: Number of renewals for the subscription
          description: Renews the subscription for a specified number of total cycles,
            then automatically cancels. Defaults to the subscription renewing indefinitely.
          minimum: 1
        terms_and_conditions:
          type: string
          title: Terms and conditions
          description: This will default to the Terms and Conditions text specified
            on the Invoice Settings page in your Recurly admin. Specify custom notes
            to add or override Terms and Conditions. Custom notes will stay with a
            subscription on all renewals.
        customer_notes:
          type: string
          title: Customer notes
          description: This will default to the Customer Notes text specified on the
            Invoice Settings. Specify custom notes to add or override Customer Notes.
            Custom notes will stay with a subscription on all renewals.
        po_number:
          type: string
          title: Purchase order number
          description: For manual invoicing, this identifies the PO number associated
            with the subscription.
          maxLength: 50
        net_terms:
          type: integer
          title: Net terms
          description: Integer representing the number of days after an invoice's
            creation that the invoice will become past due. If an invoice's net terms
            are set to '0', it is due 'On Receipt' and will become past due 24 hours
            after it’s created. If an invoice is due net 30, it will become past due
            at 31 days exactly.
          minimum: 0
          default: 0
      required:
      - plan_code
      - currency
      - account
    SubscriptionUpdate:
      type: object
      properties:
        collection_method:
          type: string
          title: Change collection method
          enum:
          - automatic
          - manual
        remaining_billing_cycles:
          type: integer
          title: Change remaining billing cycles
          description: Renews the subscription for a specified number of cycles, then
            automatically cancels.
        next_renewal_at:
          type: string
          format: date-time
          title: Next renewal date
          description: For an active subscription, this will change the next renewal
            date. For a subscription in a trial period, modifying the renewal date
            will change when the trial expires.
        terms_and_conditions:
          type: string
          title: Terms and conditions
          description: Specify custom notes to add or override Terms and Conditions.
            Custom notes will stay with a subscription on all renewals.
        customer_notes:
          type: string
          title: Customer notes
          description: Specify custom notes to add or override Customer Notes. Custom
            notes will stay with a subscription on all renewals.
        po_number:
          type: string
          title: Purchase order number
          description: For manual invoicing, this identifies the PO number associated
            with the subscription.
          maxLength: 50
        net_terms:
          type: integer
          title: Terms that the subscription is due on
          description: Integer representing the number of days after an invoice's
            creation that the invoice will become past due. If an invoice's net terms
            are set to '0', it is due 'On Receipt' and will become past due 24 hours
            after it’s created. If an invoice is due net 30, it will become past due
            at 31 days exactly.
          minimum: 0
          default: 0
        shipping_address:
          title: Shipping address
          description: Create a shipping address on the account and assign it to the
            subscription. If this and `shipping_address_id` are both present, `shipping_address_id`
            will take precedence.
          "$ref": "#/components/schemas/ShippingAddressCreate"
        shipping_address_id:
          type: string
          title: Shipping Address ID
          description: Assign a shipping address from the account's existing shipping
            addresses.
          maxLength: 13
    TaxInfo:
      type: object
      title: Tax info
      properties:
        type:
          type: string
          title: Type
          description: Provides the tax type as "vat" for EU VAT, "usst" for U.S.
            Sales Tax, or the 2 letter country code for country level tax types like
            Canada, Australia, New Zealand, Israel, and all non-EU European countries.
        region:
          type: string
          title: Region
          description: Provides the tax region applied on an invoice. For U.S. Sales
            Tax, this will be the 2 letter state code. For EU VAT this will be the
            2 letter country code. For all country level tax types, this will display
            the regional tax, like VAT, GST, or PST.
        rate:
          type: number
          format: float
          title: Rate
    Transaction:
      type: object
      properties:
        id:
          type: string
          title: Transaction ID
          maxLength: 13
        object:
          type: string
          title: Object type
        uuid:
          type: string
          title: Recurly UUID
          description: The UUID is useful for matching data with the CSV exports and
            building URLs into Recurly's UI.
          maxLength: 32
        original_transaction_id:
          type: string
          title: Original Transaction ID
          description: If this transaction is a refund (`type=refund`), this will
            be the ID of the original transaction on the invoice being refunded.
          maxLength: 13
        account:
          "$ref": "#/components/schemas/AccountMini"
        invoice_id:
          type: string
          title: Invoice ID
          description: If this transaction pays (`type=payment`) for or refunds (`type=refund`)
            an invoice, this will be the invoice's ID. It will be null for verification
            (`type=verify`) transactions.
          maxLength: 13
        invoice:
          "$ref": "#/components/schemas/InvoiceMini"
        subscription_id:
          type: string
          title: Subscription ID
          description: If the transaction is charging or refunding for a subscription,
            this is its ID.
          maxLength: 13
        type:
          type: string
          title: Transaction type
          enum:
          - authorization
          - capture
          - purchase
          - refund
          - verify
          description: |
            - `authorization` – verifies billing information and places a hold on money in the customer's account.
            - `capture` – captures funds held by an authorization and completes a purchase.
            - `purchase` – combines the authorization and capture in one transaction.
            - `refund` – returns all or a portion of the money collected in a previous transaction to the customer.
            - `verify` – a $0 or $1 transaction used to verify billing information which is immediately voided.
        origin:
          type: string
          title: Origin of transaction
          description: Describes how the transaction was triggered.
          enum:
          - api
          - hpp
          - merchant
          - recurly_admin
          - recurlyjs
          - recurring
          - transparent
          - force_collect
          - refunded_externally
          - chargeback
        currency:
          type: string
          title: Currency
          description: 3-letter ISO 4217 currency code.
          maxLength: 3
        amount:
          type: number
          format: float
          title: Amount
          description: Total transaction amount sent to the payment gateway.
        status:
          type: string
          title: Transaction status
          description: The current transaction status. Note that the status may change,
            e.g. a `pending` transaction may become `declined` or `success` may later
            become `void`.
          enum:
          - pending
          - scheduled
          - processing
          - success
          - void
          - declined
          - error
          - chargeback
        success:
          type: boolean
          title: Success?
          description: Did this transaction complete successfully?
        refunded:
          type: boolean
          title: Refunded?
          description: Indicates if part or all of this transaction was refunded.
        billing_address:
          "$ref": "#/components/schemas/Address"
        payment_method:
          "$ref": "#/components/schemas/PaymentMethod"
        ip_address_v4:
          type: string
          title: IP address
          description: |
            IP address provided when the billing information was collected:

            - When the customer enters billing information into the Recurly.js or Hosted Payment Pages, Recurly records the IP address.
            - When the merchant enters billing information using the API, the merchant may provide an IP address.
            - When the merchant enters billing information using the UI, no IP address is recorded.
        ip_address_country:
          type: string
          title: IP address's country
        status_code:
          type: string
          title: Status code
        status_message:
          type: string
          title: Status message
          description: For declined (`success=false`) transactions, the message displayed
            to the merchant.
        customer_message:
          type: string
          title: Customer message
          description: For declined (`success=false`) transactions, the message displayed
            to the customer.
        customer_message_locale:
          type: string
          title: Language code for the message
        payment_gateway:
          type: object
          x-class-name: TransactionPaymentGateway
          properties:
            id:
              type: string
            object:
              type: string
              title: Object type
            type:
              type: string
            name:
              type: string
        gateway_message:
          type: string
          title: Gateway message
          description: Transaction message from the payment gateway.
        gateway_reference:
          type: string
          title: Gateway reference
          description: Transaction reference number from the payment gateway.
        gateway_approval_code:
          type: string
          title: Transaction approval code from the payment gateway.
        gateway_response_code:
          type: string
          title: For declined transactions (`success=false`), this field lists the
            gateway error code.
        gateway_response_time:
          type: number
          format: float
          title: Gateway response time
          description: Time, in seconds, for gateway to process the transaction.
        gateway_response_values:
          type: object
          title: Gateway response values
          description: The values in this field will vary from gateway to gateway.
        cvv_check:
          type: string
          title: CVV check
          description: When processed, result from checking the CVV/CVC value on the
            transaction.
          enum:
          - D
          - I
          - M
          - N
          - P
          - S
          - U
          - X
        avs_check:
          type: string
          title: AVS check
          description: When processed, result from checking the overall AVS on the
            transaction.
          enum:
          - A
          - B
          - C
          - D
          - E
          - F
          - G
          - H
          - I
          - J
          - K
          - L
          - M
          - N
          - O
          - P
          - Q
          - R
          - S
          - T
          - U
          - V
          - W
          - X
          - Y
          - Z
        created_at:
          type: string
          format: date-time
          title: Created at
        voided_at:
          type: string
          format: date-time
          title: Voided at
        collected_at:
          type: string
          format: date-time
          title: Collected at, or if not collected yet, the time the transaction was
            created.
    UniqueCouponCode:
      type: object
      properties:
        id:
          type: string
          title: Unique Coupon Code ID
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        code:
          type: string
          title: Coupon code
          description: The code the customer enters to redeem the coupon.
        state:
          type: string
          title: State
          description: Indicates if the unique coupon code is redeemable or why not.
          enum:
          - redeemable
          - maxed_out
          - expired
          - inactive
        created_at:
          type: string
          title: Created at
          format: date-time
          readOnly: true
        updated_at:
          type: string
          title: Updated at
          format: date-time
          readOnly: true
        redeemed_at:
          type: string
          title: Redeemed at
          description: The date and time the unique coupon code was redeemed.
          format: date-time
          readOnly: true
        expired_at:
          type: string
          title: Expired at
          description: The date and time the coupon was expired early or reached its
            `max_redemptions`.
          format: date-time
    UniqueCouponCodeList:
      type: object
      properties:
        object:
          type: string
          title: Object type
          description: Will always be List.
        has_more:
          type: boolean
          description: Indicates there are more results on subsequent pages.
        next:
          type: string
          description: Path to subsequent page of results.
        data:
          type: array
          items:
            "$ref": "#/components/schemas/UniqueCouponCode"
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        object:
          type: string
          title: Object type
          readOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        time_zone:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
    BooleanResponse:
      type: object
      properties:
        success:
          type: boolean
    PaymentMethod:
      properties:
        object:
          type: string
          enum:
          - credit_card
          - paypal
          - amazon
          - roku
          - ach
          - bank_account_info
          - apple_pay
          - sepadirectdebit
          - eft
          - wire_transfer
          - money_order
          - check
          - amazon_billing_agreement
          - paypal_billing_agreement
          - other
        card_type:
          type: string
          description: Visa, MasterCard, American Express, Discover, JCB, etc.
          enum:
          - American Express
          - Dankort
          - Diners Club
          - Discover
          - Forbrugsforeningen
          - JCB
          - Laser
          - Maestro
          - MasterCard
          - Test Card
          - Unknown
          - Visa
        first_six:
          type: string
          description: Credit card number's first six digits.
          maxLength: 6
        last_four:
          type: string
          description: Credit card number's last four digits. Will refer to bank account
            if payment method is ACH.
          maxLength: 4
        exp_month:
          type: integer
          description: Expiration month.
          maxLength: 2
        exp_year:
          type: integer
          description: Expiration year.
          maxLength: 4
        billing_agreement_id:
          type: string
          description: Billing Agreement identifier. Only present for Amazon or Paypal
            payment methods.
        account_type:
          type: string
          description: The bank account type. Only present for ACH payment methods.
          enum:
          - checking
          - savings
        routing_number:
          type: string
          description: The bank account's routing number. Only present for ACH payment
            methods.
        routing_number_bank:
          type: string
          description: The bank name of this routing number.
    Error:
      type: object
      properties:
        type:
          type: string
          title: Type
          enum:
          - bad_request
          - internal_server_error
          - immutable_subscription
          - invalid_api_key
          - invalid_api_version
          - invalid_content_type
          - invalid_permissions
          - invalid_token
          - not_found
          - simultaneous_request
          - transaction
          - unauthorized
          - unavailable_in_api_version
          - unknown_api_version
          - validation
          - missing_feature
        message:
          type: string
          title: Message
        params:
          type: array
          title: Parameter specific errors
          items:
            type: object
            properties:
              param:
                type: string
    ErrorMayHaveTransaction:
      allOf:
      - "$ref": "#/components/schemas/Error"
      - type: object
        properties:
          transaction_error:
            type: object
            x-class-name: TransactionError
            title: Transaction error details
            description: This is only included on errors with `type=transaction`.
            properties:
              object:
                type: string
                title: Object type
              transaction_id:
                type: string
                title: Transaction ID
                maxLength: 13
              category:
                type: string
                title: Category
                enum:
                - 3d_secure_required
                - amazon
                - api_error
                - approved
                - communication
                - configuration
                - duplicate
                - fraud
                - hard
                - invalid
                - not_enabled
                - not_supported
                - recurly
                - referral
                - skles
                - soft
                - unknown
              code:
                type: string
                title: Code
                enum:
                - ach_cancel
                - ach_chargeback
                - ach_credit_return
                - ach_exception
                - ach_return
                - ach_transactions_not_supported
                - ach_validation_exception
                - amazon_amount_exceeded
                - amazon_invalid_authorization_status
                - amazon_invalid_close_attempt
                - amazon_invalid_create_order_reference
                - amazon_invalid_order_status
                - amazon_not_authorized
                - amazon_order_not_modifiable
                - amazon_transaction_count_exceeded
                - api_error
                - approved
                - approved_fraud_review
                - authorization_already_captured
                - authorization_amount_depleted
                - authorization_expired
                - batch_processing_error
                - billing_agreement_already_accepted
                - billing_agreement_not_accepted
                - call_issuer
                - call_issuer_update_cardholder_data
                - cannot_refund_unsettled_transactions
                - card_not_activated
                - card_type_not_accepted
                - cardholder_requested_stop
                - contact_gateway
                - currency_not_supported
                - customer_canceled_transaction
                - cvv_required
                - declined
                - declined_card_number
                - declined_exception
                - declined_expiration_date
                - declined_missing_data
                - declined_saveable
                - declined_security_code
                - deposit_referenced_chargeback
                - duplicate_transaction
                - exceeds_daily_limit
                - expired_card
                - finbot_unavailable
                - fraud_address
                - fraud_address_recurly
                - fraud_advanced_verification
                - fraud_gateway
                - fraud_generic
                - fraud_ip_address
                - fraud_risk_check
                - fraud_security_code
                - fraud_stolen_card
                - fraud_too_many_attempts
                - fraud_velocity
                - gateway_error
                - gateway_rate_limited
                - gateway_timeout
                - gateway_token_not_found
                - gateway_unavailable
                - insufficient_funds
                - invalid_account_number
                - invalid_amount
                - invalid_card_number
                - invalid_data
                - invalid_email
                - invalid_gateway_configuration
                - invalid_issuer
                - invalid_login
                - invalid_merchant_type
                - invalid_transaction
                - issuer_unavailable
                - merch_max_transaction_limit_exceeded
                - moneybot_unavailable
                - no_billing_information
                - no_gateway
                - no_gateway_found_for_transaction_amount
                - partial_approval
                - partial_credits_not_supported
                - payment_cannot_void_authorization
                - payment_not_accepted
                - paypal_account_issue
                - paypal_cannot_pay_self
                - paypal_declined_use_alternate
                - paypal_expired_reference_id
                - paypal_hard_decline
                - paypal_invalid_billing_agreement
                - paypal_primary_declined
                - processor_unavailable
                - recurly_error
                - recurly_failed_to_get_token
                - recurly_token_mismatch
                - recurly_token_not_found
                - reference_transactions_not_enabled
                - restricted_card
                - restricted_card_chargeback
                - simultaneous
                - ssl_error
                - temporary_hold
                - three_d_secure_authentication
                - three_d_secure_not_supported
                - too_many_attempts
                - total_credit_exceeds_capture
                - transaction_already_refunded
                - transaction_already_voided
                - transaction_cannot_be_authorized
                - transaction_cannot_be_refunded
                - transaction_cannot_be_refunded_currently
                - transaction_cannot_be_voided
                - transaction_failed_to_settle
                - transaction_not_found
                - transaction_settled
                - transaction_stale_at_gateway
                - try_again
                - unknown
                - vaultly_service_unavailable
                - zero_dollar_auth_not_supported
              message:
                type: string
                title: Customer message
              merchant_advice:
                type: string
                title: Merchant message
